var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.453,1,2.576]],["body/modules/AppModule.html",[0,2.161,1,5.14,2,1.665,3,1.769,4,2.021,5,2.021,6,1.769,7,3.054,8,3.054,9,2.917,10,2.917,11,2.917,12,2.917,13,4.171,14,0.019,15,3.613,16,4.171,17,3.87,18,4.26,19,4.171,20,2.833,21,2.021,22,1.886,23,0.174,24,0.154,25,0.154,26,3.397,27,3.053,28,0.368,29,0.328,30,3.397,31,2.917,32,2.602,33,2.366,34,0.943,35,2.602,36,3.397,37,2.602,38,3.397,39,3.397,40,3.397,41,3.397,42,3.317,43,3.397,44,2.833,45,2.602,46,3.397,47,3.397,48,3.397,49,3.397,50,4.762,51,3.397,52,3.397,53,2.602,54,3.397,55,3.397,56,2.021,57,3.397,58,3.397,59,0.174,60,0.024,61,0.012,62,0.012]],["title/controllers/AuthControllers.html",[63,2.054,64,2.576]],["body/controllers/AuthControllers.html",[14,0.019,23,0.128,24,0.113,25,0.113,28,0.321,29,0.24,34,0.692,44,1.482,45,1.908,59,0.128,60,0.018,61,0.009,62,0.009,63,1.384,64,2.643,65,1.384,66,2.14,67,1.908,68,1.908,69,0.174,70,0.637,71,1.166,72,3.26,73,3.26,74,3.26,75,3.26,76,4.597,77,2.491,78,1.322,79,5.272,80,5.001,81,2.42,82,3.795,83,3.795,84,0.697,85,2.491,86,1.087,87,0.98,88,0.458,89,1.087,90,2.712,91,1.032,92,2.491,93,3.058,94,3.795,95,2.491,96,4.752,97,2.14,98,3.795,99,3.795,100,2.491,101,1.417,102,1.755,103,2.491,104,2.677,105,3.795,106,2.491,107,2.491,108,5.141,109,3.795,110,2.491,111,2.491,112,2.14,113,1.482,114,1.908,115,0.814,116,2.491,117,1.735,118,2.14,119,2.14,120,1.908,121,1.482,122,2.735,123,2.14,124,1.631,125,2.491,126,0.489,127,0.672,128,2.491,129,2.377,130,1.174,131,2.491,132,2.491,133,2.491,134,2.677,135,2.519,136,3.937,137,2.491,138,2.491,139,0.746,140,2.01,141,2.491,142,2.491,143,0.441,144,3.795,145,2.491,146,3.795,147,3.795,148,2.14,149,2.491,150,2.491,151,2.491,152,2.491,153,2.491,154,2.14,155,2.491,156,2.491,157,2.491]],["title/modules/AuthModule.html",[0,1.453,13,2.371]],["body/modules/AuthModule.html",[0,2.246,2,1.789,3,1.902,4,2.172,5,2.172,6,1.902,7,3.173,8,2.028,13,4.791,14,0.019,17,3.958,20,2.979,21,2.172,22,2.028,23,0.188,24,0.166,25,0.166,27,3.21,28,0.366,29,0.352,33,3.487,34,1.014,59,0.188,60,0.026,61,0.012,62,0.012,64,3.98,65,2.781,122,3.958,123,3.136,158,3.136,159,3.136,160,3.136,161,3.958,162,3.958,163,3.958,164,3.958,165,3.695,166,3.651,167,3.651,168,3.136,169,3.136,170,3.136,171,3.136,172,3.651,173,3.136]],["title/injectables/AuthServices.html",[122,2.2,174,0.212]],["body/injectables/AuthServices.html",[14,0.019,23,0.159,24,0.141,25,0.141,28,0.342,29,0.299,59,0.159,60,0.022,61,0.011,62,0.011,69,0.216,70,0.748,71,1.182,72,3.83,73,3.83,74,3.83,75,3.83,78,1.24,84,0.763,86,1.19,87,1.073,88,0.502,89,1.19,91,1.067,93,3.401,97,3.83,101,1.95,102,2.644,104,2.977,112,2.659,115,1.117,120,2.371,122,2.653,126,0.876,127,1.073,139,1.123,143,0.548,162,3.869,163,3.869,164,3.869,165,3.612,168,2.659,169,2.659,170,2.659,171,2.659,174,0.256,175,0.902,176,2.659,177,2.659,178,2.76,179,3.096,180,4.459,181,3.096,182,2.371,183,4.459,184,3.096,185,3.415,186,3.096,187,4.459,188,3.096,189,1.985,190,3.096,191,3.096,192,3.096,193,3.096,194,3.096]],["title/classes/ChangePasswdBody.html",[60,0.026,195,2.576]],["body/classes/ChangePasswdBody.html",[14,0.018,23,0.264,24,0.234,25,0.234,28,0.264,59,0.264,60,0.044,61,0.015,62,0.015,69,0.358,78,1.227,81,2.245,84,0.647,88,0.425,195,4.349,196,2.245,197,4.41,198,2.108,199,2.787,200,3.933,201,4.782,202,5.135,203,4.349,204,3.292,205,3.292,206,3.933]],["title/injectables/ChangePasswdUseCase.html",[174,0.212,207,2.2]],["body/injectables/ChangePasswdUseCase.html",[14,0.019,23,0.194,24,0.172,25,0.172,28,0.32,29,0.365,34,1.05,59,0.194,60,0.027,61,0.013,62,0.013,69,0.264,70,0.861,71,0.977,78,1.321,84,0.646,86,1.008,87,0.908,88,0.425,89,1.008,91,0.706,101,1.915,115,1.03,124,2.386,126,1.008,127,0.908,130,1.425,140,2.243,143,1.105,174,0.294,175,1.102,199,1.567,207,3.051,208,3.249,209,2.243,210,1.749,211,2.441,212,3.783,213,3.929,214,4.998,215,3.783,216,2.635,217,3.288,218,1.539,219,1.97,220,2.425,221,1.749,222,1.854,223,1.854,224,2.425,225,3.929,226,2.897,227,5.129,228,3.783,229,3.783,230,2.635,231,2.635]],["title/modules/CommonModule.html",[0,1.453,161,2.2]],["body/modules/CommonModule.html",[0,2.528,2,2.277,3,2.419,4,2.764,5,2.764,6,2.419,7,3.572,8,3.572,14,0.019,20,3.491,21,2.764,22,2.58,23,0.239,24,0.211,25,0.211,27,2.978,28,0.33,29,0.448,33,4.087,34,1.29,59,0.239,60,0.033,61,0.015,62,0.015,161,4.299,178,3.287,232,3.99,233,3.99,234,3.99,235,4.645,236,4.645]],["title/injectables/CommonServices.html",[174,0.212,178,1.617]],["body/injectables/CommonServices.html",[14,0.019,23,0.172,24,0.153,25,0.153,28,0.304,29,0.323,34,0.931,59,0.172,60,0.024,61,0.012,62,0.012,68,3.616,69,0.234,70,0.792,71,0.917,78,1.357,84,0.746,86,1.073,87,0.967,88,0.452,89,1.073,90,2.314,91,0.881,115,0.594,124,2.299,126,0.659,127,1.05,130,0.766,139,0.659,143,0.594,174,0.271,175,0.978,178,2.065,198,1.594,210,1.551,218,1.248,237,2.57,238,4.692,239,4.721,240,4.692,241,3.355,242,4.055,243,5.091,244,3.355,245,1.996,246,3.355,247,4.129,248,3.355,249,2.183,250,2.881,251,2.881,252,4.055,253,3.616,254,4.055,255,3.288,256,4.055,257,3.288,258,2.183,259,4.055,260,4.055,261,4.055,262,3.355,263,1.863,264,4.055,265,1.747,266,3.616,267,0.805,268,3.25,269,3.25,270,1.996,271,2.881,272,2.881,273,1.863,274,2.881,275,2.881,276,2.57,277,2.57,278,2.881]],["title/modules/DatabaseModule.html",[0,1.453,15,2.054]],["body/modules/DatabaseModule.html",[0,2.517,2,2.625,7,2.975,8,2.975,14,0.019,15,3.557,23,0.275,24,0.244,25,0.244,28,0.329,29,0.517,59,0.275,60,0.038,61,0.016,62,0.016,279,5.356,280,5.248,281,5.356]],["title/injectables/DeleteUserUseCase.html",[174,0.212,282,2.2]],["body/injectables/DeleteUserUseCase.html",[14,0.019,23,0.21,24,0.186,25,0.186,28,0.311,29,0.394,34,1.135,59,0.21,60,0.029,61,0.013,62,0.013,69,0.285,70,0.907,71,1.016,84,0.68,86,1.062,87,0.957,88,0.447,89,1.062,91,0.763,115,1.072,124,2.44,126,1.062,127,0.957,130,1.234,140,2.363,143,0.957,174,0.31,175,1.192,209,2.363,210,1.891,211,2.489,216,2.848,218,1.429,219,2.129,220,2.621,221,1.891,222,2.004,223,2.004,224,2.621,282,3.214,283,3.512,284,4.089,285,4.138,286,1.945,287,4.089,288,2.238,289,4.089]],["title/injectables/EmailVerifyUseCase.html",[162,2.2,174,0.212]],["body/injectables/EmailVerifyUseCase.html",[14,0.019,23,0.206,24,0.182,25,0.182,28,0.308,29,0.386,34,1.112,59,0.206,60,0.028,61,0.013,62,0.013,69,0.279,70,0.895,71,1.005,78,1.177,84,0.671,86,1.047,87,0.944,88,0.441,89,1.047,91,0.747,101,1.989,115,1.061,124,2.426,126,1.047,127,0.944,130,1.217,139,0.787,140,2.331,143,0.944,162,3.171,174,0.306,175,1.167,209,2.331,210,1.852,211,2.476,213,4.082,218,1.409,219,2.086,221,1.852,222,1.963,223,1.963,258,1.852,290,3.44,291,4.005,292,4.005,293,2.567,294,4.005,295,3.44,296,4.577,297,4.005]],["title/interfaces/Env.html",[267,0.887,298,2.576]],["body/interfaces/Env.html",[14,0.019,23,0.151,24,0.134,25,0.134,28,0.221,42,2.049,53,2.254,59,0.151,61,0.011,62,0.011,69,0.205,70,0.494,78,1.429,88,0.543,90,2.106,101,2.084,117,2.049,121,1.751,129,1.361,135,1.442,139,1.218,143,0.521,198,1.451,218,1.476,255,4.135,257,2.049,258,2.347,267,0.706,286,1.992,298,3.888,299,1.442,300,2.254,301,5.1,302,5.1,303,5.1,304,5.1,305,5.1,306,5.1,307,5.1,308,3.691,309,3.291,310,3.691,311,2.527,312,2.527,313,2.527,314,2.527,315,2.527,316,2.527,317,2.527,318,2.527,319,2.527,320,2.527,321,2.527,322,2.254,323,1.886,324,2.527,325,2.254,326,2.527,327,2.527,328,2.527,329,3.291,330,2.254,331,2.527,332,2.527,333,2.527,334,2.527,335,2.527,336,2.049,337,2.254,338,2.254,339,2.049,340,2.254,341,3.691,342,2.527,343,2.527,344,2.527,345,2.527,346,2.527,347,2.527,348,2.527,349,3.691,350,2.254,351,2.049,352,2.527,353,2.527,354,2.527,355,2.254,356,2.527,357,2.527,358,2.527,359,2.254,360,4.795,361,2.527,362,2.527,363,2.527,364,2.527,365,3.691,366,3.691,367,3.691]],["title/injectables/FavoriteRepository.html",[174,0.212,368,1.926]],["body/injectables/FavoriteRepository.html",[14,0.019,23,0.15,24,0.133,25,0.133,28,0.286,29,0.282,59,0.15,60,0.021,61,0.011,62,0.011,69,0.204,70,0.718,71,1.169,84,0.746,86,1.163,87,1.049,88,0.461,89,1.163,91,1.038,115,0.518,126,0.84,127,0.757,130,1.155,139,0.84,143,0.518,174,0.245,175,0.852,185,2.239,218,1.131,249,3.22,267,0.701,286,2.411,288,1.772,368,2.228,369,2.239,370,3.673,371,3.673,372,2.979,373,3.673,374,2.924,375,3.242,376,2.924,377,3.673,378,4.344,379,3.72,380,2.924,381,3.68,382,4.344,383,2.924,384,4.344,385,2.924,386,4.344,387,2.924,388,2.096,389,2.511,390,1.739,391,1.681,392,2.036,393,2.979,394,1.433,395,2.511,396,2.228,397,1.874,398,2.511,399,2.511,400,2.511,401,1.874,402,2.511,403,1.874,404,2.239,405,2.511]],["title/classes/Favorites.html",[60,0.026,388,1.812]],["body/classes/Favorites.html",[14,0.019,23,0.22,24,0.195,25,0.195,28,0.318,56,2.547,59,0.22,60,0.03,61,0.014,62,0.014,69,0.299,81,2.435,84,0.701,88,0.543,196,1.872,198,1.88,218,1.473,258,3.031,286,2.106,379,3.223,381,3.682,388,3.033,390,2.547,391,2.189,392,2.982,403,3.57,406,3.677,407,5.569,408,3.313,409,5.02,410,4.281,411,4.281,412,4.74,413,3.279,414,4.74,415,3.879,416,1.872,417,2.744,418,3.279,419,3.677,420,3.279,421,4.265]],["title/injectables/GetFavoritesUseCase.html",[174,0.212,422,2.2]],["body/injectables/GetFavoritesUseCase.html",[14,0.019,23,0.235,24,0.208,25,0.208,28,0.299,29,0.442,59,0.235,60,0.033,61,0.014,62,0.014,69,0.32,70,0.977,71,1.073,84,0.733,86,1.143,87,1.03,88,0.482,89,1.143,91,0.855,102,2.119,115,0.811,126,0.9,127,0.811,130,1.047,139,0.9,174,0.334,175,1.336,209,2.544,270,2.726,285,4.456,286,2.054,288,1.899,368,3.694,422,3.461,423,3.936,424,3.936,425,4.583,426,4.583,427,3.51,428,4.583]],["title/injectables/GetProductsUseCase.html",[174,0.212,429,2.054]],["body/injectables/GetProductsUseCase.html",[14,0.019,23,0.223,24,0.197,25,0.197,28,0.288,29,0.418,59,0.223,60,0.031,61,0.014,62,0.014,69,0.303,70,0.942,71,1.045,78,1.373,84,0.707,86,1.103,87,0.994,88,0.465,89,1.103,91,0.809,102,2.005,115,0.768,126,0.852,127,0.768,139,1.223,174,0.322,175,1.263,209,2.455,245,3.34,270,2.579,429,3.118,430,3.724,431,4.335,432,3.882,433,4.335,434,5.614,435,3.43,436,4.335,437,3.599,438,3.724,439,4.335,440,4.335,441,4.335]],["title/injectables/GetUserUseCase.html",[174,0.212,442,2.2]],["body/injectables/GetUserUseCase.html",[14,0.019,23,0.209,24,0.185,25,0.185,28,0.31,29,0.392,34,1.128,59,0.209,60,0.029,61,0.013,62,0.013,69,0.284,70,0.903,71,1.013,84,0.678,86,1.057,87,0.953,88,0.446,89,1.057,91,0.758,102,1.879,115,1.068,124,2.436,126,1.057,127,0.953,130,0.928,139,0.798,140,2.354,143,0.953,174,0.309,175,1.184,209,2.354,210,1.879,211,2.485,216,2.831,218,1.596,219,2.117,220,2.605,221,1.879,222,1.992,223,1.992,224,2.605,258,1.879,285,4.122,286,1.939,288,2.23,442,3.202,443,3.491,444,4.064,445,4.064]],["title/classes/HandleError.html",[60,0.026,113,2.2]],["body/classes/HandleError.html",[14,0.019,23,0.235,24,0.208,25,0.208,28,0.235,29,0.44,32,4.888,59,0.235,60,0.032,61,0.014,62,0.014,69,0.319,70,0.974,84,0.575,86,0.897,87,0.809,88,0.378,89,0.897,91,0.852,113,3.454,129,2.112,135,2.845,143,0.809,196,1.997,221,2.951,222,2.239,336,3.181,337,3.498,338,3.498,339,3.181,340,3.498,446,3.923,447,4.986,448,5.805,449,4.568,450,3.923,451,3.498,452,4.568,453,4.091,454,4.568,455,3.923,456,4.568,457,4.568,458,4.568,459,3.181,460,4.568,461,4.568]],["title/classes/HttpExceptionFilter.html",[60,0.026,462,2.833]],["body/classes/HttpExceptionFilter.html",[14,0.019,23,0.208,24,0.184,25,0.184,28,0.276,29,0.391,59,0.208,60,0.029,61,0.013,62,0.013,69,0.283,70,0.902,78,1.055,79,3.104,80,3.104,84,0.51,86,0.796,87,0.718,88,0.335,89,0.796,91,0.756,121,2.411,134,3.138,139,0.796,140,2.806,143,1.215,196,1.772,223,1.986,253,4.615,394,2.632,396,2.11,450,3.48,451,4.914,462,4.114,463,3.48,464,6.025,465,5.371,466,6.416,467,4.052,468,4.052,469,4.052,470,4.052,471,4.052,472,4.052,473,4.052,474,6.025,475,4.052,476,6.025,477,4.052,478,5.371,479,4.052,480,4.052,481,4.052,482,4.052]],["title/interfaces/IFavoritesRepository.html",[267,0.887,393,2.576]],["body/interfaces/IFavoritesRepository.html",[14,0.019,23,0.157,24,0.139,25,0.139,28,0.291,29,0.294,59,0.157,60,0.022,61,0.011,62,0.011,69,0.213,70,0.74,71,0.953,84,0.715,86,1.115,87,1.005,88,0.47,89,1.115,91,1.059,115,0.54,126,0.599,127,0.781,130,1.183,139,0.866,143,0.54,174,0.253,185,2.334,218,1.166,249,3.246,267,0.731,286,2.42,288,1.826,299,1.494,368,1.587,369,2.334,370,3.786,371,3.786,372,3.07,373,3.786,375,1.954,377,2.618,378,4.448,379,3.745,381,3.734,382,4.448,384,4.448,386,4.448,388,2.16,389,2.618,390,1.813,391,1.733,392,2.123,393,3.607,394,1.494,395,2.618,396,2.296,397,1.954,398,2.618,399,2.618,400,2.618,401,1.954,402,2.618,403,1.954,404,2.334,405,2.618,483,3.048,484,3.048,485,3.048,486,3.048]],["title/interfaces/IUserRepository.html",[267,0.887,487,2.371]],["body/interfaces/IUserRepository.html",[14,0.019,23,0.141,24,0.125,25,0.125,28,0.278,29,0.265,59,0.21,60,0.02,61,0.01,62,0.01,69,0.192,70,0.687,71,0.97,78,0.541,84,0.727,86,1.135,87,1.023,88,0.478,89,1.135,91,1.078,104,3.008,115,0.487,126,0.541,127,0.487,130,1.319,139,0.804,143,0.487,174,0.235,199,1.14,211,0.977,218,1.87,230,3.401,231,3.765,245,1.638,249,3.27,267,0.981,286,1.856,288,1.695,299,1.349,323,2.623,375,1.765,390,1.638,394,1.349,396,2.131,397,1.765,401,1.765,408,2.434,416,1.204,487,3.13,488,1.917,489,3.514,490,4.14,491,3.514,492,4.218,493,3.74,494,2.753,495,2.364,496,3.74,497,2.753,498,3.74,499,2.364,500,4.14,501,4.023,502,3.465,503,2.753,504,3.74,505,3.74,506,2.753,507,2.364,508,2.753,509,3.134,510,2.108,511,3.134,512,2.108,513,3.74,514,2.108,515,1.765,516,2.108,517,2.108,518,2.108,519,2.108,520,2.108,521,2.108,522,2.108]],["title/classes/LoginBody.html",[60,0.026,93,2.2]],["body/classes/LoginBody.html",[14,0.019,23,0.247,24,0.219,25,0.219,28,0.247,59,0.247,60,0.043,61,0.015,62,0.015,69,0.336,78,1.344,81,2.622,84,0.755,88,0.496,93,3.568,101,2.439,196,2.103,198,2.024,199,2.707,200,3.683,201,4.593,203,4.552,204,3.083,205,3.083,206,3.683,523,4.13,524,4.13,525,4.13,526,4.809,527,4.809,528,5.151,529,4.13,530,4.13]],["title/injectables/LoginUseCase.html",[163,2.2,174,0.212]],["body/injectables/LoginUseCase.html",[14,0.019,23,0.174,24,0.154,25,0.154,28,0.334,29,0.327,34,0.941,59,0.174,60,0.024,61,0.012,62,0.012,69,0.236,70,0.798,71,0.922,84,0.599,86,0.934,87,0.842,88,0.394,89,0.934,90,2.33,91,0.632,93,3.542,101,1.774,102,1.567,115,0.972,120,2.595,124,2.307,126,0.934,127,0.842,130,1.086,139,0.666,140,2.843,143,1.151,163,2.828,174,0.273,175,0.987,199,1.404,209,2.402,210,1.567,211,2.369,217,3.048,218,1.257,219,1.765,220,2.172,221,2.54,222,2.691,223,2.691,224,2.172,263,1.882,265,1.765,273,1.882,288,1.404,293,2.172,295,2.91,296,2.91,455,2.91,531,2.91,532,3.388,533,2.91,534,3.388,535,3.388,536,4.754,537,3.388,538,3.388,539,3.388,540,2.36,541,3.388,542,2.36,543,3.388,544,3.388]],["title/injectables/PasswdRecoveryUseCase.html",[164,2.2,174,0.212]],["body/injectables/PasswdRecoveryUseCase.html",[14,0.019,23,0.187,24,0.166,25,0.166,28,0.331,29,0.351,34,1.011,59,0.187,60,0.026,61,0.012,62,0.012,69,0.254,70,0.839,71,0.958,78,1.121,84,0.629,86,0.982,87,0.885,88,0.414,89,0.982,91,0.679,101,2.292,115,1.087,124,2.359,126,0.982,127,1.01,130,1.141,140,2.185,143,1.087,164,2.973,174,0.287,175,1.061,178,2.978,189,2.334,209,2.185,210,1.684,211,2.416,213,3.828,219,1.896,220,2.334,221,1.684,222,1.785,223,1.785,224,2.334,263,2.022,265,1.896,268,2.166,269,2.166,273,2.022,293,2.334,350,2.789,359,2.789,540,2.536,542,2.536,545,3.127,546,3.641,547,3.641,548,4.998,549,3.641,550,2.789,551,4.998,552,3.641,553,3.641,554,2.789]],["title/injectables/PopulateProductsService.html",[18,2.2,174,0.212]],["body/injectables/PopulateProductsService.html",[14,0.019,18,2.505,23,0.326,24,0.13,25,0.13,28,0.283,29,0.276,34,0.795,59,0.147,60,0.02,61,0.01,62,0.01,69,0.2,70,0.707,71,1.031,78,1.082,84,0.739,86,0.562,87,0.507,88,0.349,89,0.562,91,0.932,115,0.507,124,2.179,126,0.562,127,1.124,129,1.947,130,0.962,134,2.193,135,2.064,139,0.562,143,0.746,174,0.242,175,0.834,198,1.422,204,3.203,210,1.324,267,0.687,270,1.703,286,1.353,391,2.165,435,3.198,459,2.933,555,2.192,556,4.732,557,5.042,558,4.22,559,4.211,560,2.862,561,4.089,562,2.862,563,2.862,564,2.458,565,3.225,566,2.192,567,4.703,568,4.703,569,4.703,570,4.703,571,3.617,572,2.458,573,4.291,574,4.291,575,2.458,576,4.291,577,5.273,578,4.291,579,4.291,580,2.458,581,2.458,582,2.458,583,2.192,584,2.458,585,2.458,586,2.458,587,2.458,588,2.458,589,2.458,590,3.617,591,3.617,592,2.458,593,2.458]],["title/interfaces/ProductEl.html",[267,0.887,561,2.576]],["body/interfaces/ProductEl.html",[14,0.019,18,1.736,23,0.349,24,0.133,25,0.133,28,0.286,29,0.281,34,0.81,59,0.15,60,0.021,61,0.011,62,0.011,69,0.204,71,0.717,78,1.367,88,0.512,115,0.517,124,1.792,127,0.894,129,1.975,130,0.975,134,2.224,135,2.093,139,0.573,143,0.756,174,0.245,198,1.442,204,3.238,267,0.7,270,1.736,286,1.986,299,1.43,391,1.678,435,3.479,459,2.974,555,2.234,556,2.506,557,3.668,558,2.234,561,3.872,564,2.506,565,3.271,566,2.234,567,5.116,568,5.116,569,5.116,570,5.116,571,3.668,572,2.506,573,4.338,574,4.338,575,2.506,576,4.338,577,5.309,578,4.338,579,4.338,580,2.506,581,2.506,582,2.506,583,2.234,584,2.506,585,2.506,586,2.506,587,2.506,588,2.506,589,2.506,590,3.668,591,3.668,592,2.506,593,2.506]],["title/interfaces/ProductRepositoryInterface.html",[267,0.887,594,2.576]],["body/interfaces/ProductRepositoryInterface.html",[14,0.019,23,0.191,24,0.169,25,0.169,28,0.296,29,0.358,59,0.191,60,0.026,61,0.013,62,0.013,69,0.259,70,0.85,71,0.967,78,1.368,84,0.726,86,0.995,87,0.896,88,0.419,89,0.995,91,1.075,115,0.657,126,0.729,127,0.657,139,1.132,174,0.29,249,3.267,267,0.89,299,1.819,391,1.99,394,1.819,396,1.933,416,2.214,432,2.061,435,2.637,437,2.379,594,4.013,595,2.842,596,5.564,597,4.348,598,4.348,599,3.711,600,4.949,601,3.711,602,4.949,603,3.711,604,2.842,605,3.187,606,3.187,607,3.187,608,4.949,609,3.187,610,4.348,611,3.187,612,4.348,613,4.348,614,3.187]],["title/classes/Products.html",[60,0.026,391,1.453]],["body/classes/Products.html",[14,0.019,23,0.29,24,0.137,25,0.137,28,0.264,56,4.205,59,0.154,60,0.021,61,0.011,62,0.011,69,0.21,78,1.297,81,2.888,84,0.832,87,0.533,88,0.594,196,1.315,198,1.474,218,1.492,258,2.608,286,2.008,288,2.129,379,1.566,388,2.519,391,2.02,403,2.799,408,3.928,409,3.344,412,5.058,413,2.303,414,3.344,415,3.041,416,1.315,417,1.928,418,2.303,419,2.583,420,2.303,421,2.303,435,2.677,567,3.937,568,3.937,569,3.937,570,3.937,615,2.583,616,4.415,617,5.536,618,6.014,619,3.007,620,3.75,621,3.007,622,3.007,623,3.007,624,3.007,625,3.007,626,3.007,627,2.583,628,3.75,629,3.007,630,3.75,631,3.007,632,3.007,633,4.844,634,4.366]],["title/controllers/ProductsControllers.html",[63,2.054,635,2.576]],["body/controllers/ProductsControllers.html",[14,0.019,23,0.213,24,0.189,25,0.189,28,0.313,29,0.4,59,0.213,60,0.03,61,0.014,62,0.014,63,2.305,65,2.305,67,3.179,69,0.29,70,0.916,71,1.023,78,1.072,81,1.815,84,0.523,86,0.815,87,0.735,88,0.505,89,0.815,91,0.775,102,1.919,113,2.469,114,3.179,115,0.966,118,5.563,126,0.815,127,0.735,129,1.919,130,0.948,134,2.162,135,2.034,136,3.179,139,0.815,143,0.966,245,2.469,391,1.631,429,3.386,435,3.175,437,3.909,635,3.801,636,3.565,637,4.687,638,4.151,639,5.457,640,4.151,641,3.179,642,4.151,643,4.151,644,5.457,645,4.151]],["title/modules/ProductsModule.html",[0,1.453,16,2.371]],["body/modules/ProductsModule.html",[0,2.375,2,1.998,3,2.123,4,2.425,5,2.425,6,2.123,7,3.356,8,2.264,14,0.019,15,3.816,16,4.729,20,3.208,21,2.425,22,2.264,23,0.209,24,0.185,25,0.185,27,3.457,28,0.36,29,0.393,35,3.122,59,0.209,60,0.029,61,0.013,62,0.013,65,2.995,429,3.816,432,3.816,438,3.501,635,4.209,641,3.122,646,3.501,647,4.076,648,3.501,649,4.405,650,4.076,651,4.076,652,4.076,653,4.13,654,4.076]],["title/injectables/ProductsRepository.html",[174,0.212,432,2.054]],["body/injectables/ProductsRepository.html",[14,0.019,23,0.183,24,0.162,25,0.162,28,0.29,29,0.344,59,0.183,60,0.025,61,0.012,62,0.012,69,0.249,70,0.827,71,1.176,78,1.356,84,0.766,86,1.109,87,0.999,88,0.408,89,1.109,91,1.053,115,0.631,126,0.968,127,0.631,139,1.109,174,0.283,175,1.039,249,3.239,267,0.855,391,1.936,394,1.747,396,1.857,416,2.154,432,2.736,435,2.565,437,2.286,594,3.431,595,2.731,596,5.486,597,4.23,598,4.23,600,4.847,602,4.847,604,2.731,605,3.062,606,3.062,607,4.23,608,4.847,609,3.062,610,4.23,611,3.062,612,4.23,613,4.23,614,3.062,655,3.565,656,3.565,657,3.565,658,3.565,659,3.565]],["title/injectables/ProductsServices.html",[174,0.212,649,2.371]],["body/injectables/ProductsServices.html",[14,0.019,23,0.228,24,0.202,25,0.202,28,0.293,29,0.428,59,0.228,60,0.032,61,0.014,62,0.014,69,0.309,70,0.956,71,1.056,78,1.381,84,0.717,86,1.119,87,1.009,88,0.472,89,1.119,91,0.827,102,2.05,115,1.009,126,1.119,127,0.785,139,0.871,174,0.327,175,1.292,245,3.389,429,3.905,435,3.459,437,2.843,637,4.893,641,3.396,649,3.652,660,3.808,661,4.434,662,4.434,663,5.696,664,4.434,665,4.434]],["title/classes/RegisterBody.html",[60,0.026,104,1.926]],["body/classes/RegisterBody.html",[14,0.019,23,0.234,24,0.207,25,0.207,28,0.234,59,0.234,60,0.041,61,0.014,62,0.014,69,0.318,78,1.391,81,2.787,84,0.802,88,0.527,101,2.379,104,3.017,196,1.991,198,1.956,199,2.64,200,3.487,201,4.437,203,4.672,204,2.918,205,2.918,206,3.487,524,3.91,525,3.91,528,4.976,529,3.91,530,3.91,666,3.91,667,4.438,668,4.552,669,4.552,670,4.552,671,5.793,672,4.552,673,4.552]],["title/injectables/RegisterUseCase.html",[165,2.054,174,0.212]],["body/injectables/RegisterUseCase.html",[14,0.019,23,0.171,24,0.151,25,0.151,28,0.332,29,0.321,34,0.925,59,0.171,60,0.024,61,0.012,62,0.012,69,0.232,70,0.788,71,0.913,78,1.069,84,0.591,86,0.923,87,0.832,88,0.389,89,0.923,91,0.621,101,2.48,115,1.046,124,2.294,126,0.923,127,0.963,130,1.349,140,2.054,143,1.145,165,2.608,174,0.269,175,0.971,178,2.905,182,2.551,189,2.135,199,2.254,209,2.379,210,1.54,211,2.357,217,3.011,219,1.734,221,1.54,222,1.632,223,1.632,225,3.597,226,2.551,263,1.85,265,1.734,267,0.799,268,1.981,269,2.794,273,1.85,293,2.135,351,3.271,533,2.86,540,2.32,542,2.32,550,2.551,554,2.551,667,3.789,674,2.551,675,3.33,676,4.115,677,3.33,678,2.86,679,2.86,680,4.034,681,2.86,682,2.86,683,4.034,684,2.86,685,2.86,686,2.86]],["title/interfaces/RegisterUserCaseProps.html",[267,0.887,676,2.576]],["body/interfaces/RegisterUserCaseProps.html",[14,0.019,23,0.178,24,0.157,25,0.157,28,0.336,29,0.333,34,0.96,59,0.178,60,0.025,61,0.012,62,0.012,69,0.241,71,0.58,78,1.367,88,0.46,101,2.63,115,1.063,124,1.97,126,0.679,127,0.983,130,1.372,140,2.108,143,1.158,165,1.92,174,0.277,178,2.428,182,2.648,189,2.216,198,1.627,199,2.71,209,1.512,211,1.97,217,3.091,219,1.8,221,1.599,222,1.694,223,1.694,225,3.693,226,2.648,263,1.92,265,1.8,267,0.829,268,2.057,269,2.868,273,1.92,293,2.216,299,1.694,351,3.358,540,2.408,542,2.408,550,2.648,554,2.648,667,4.557,674,2.648,676,3.866,678,2.969,679,2.969,680,4.141,681,2.969,682,2.969,683,4.141,684,2.969,685,2.969,686,2.969]],["title/injectables/RmUnverifiedUsers.html",[19,2.371,174,0.212]],["body/injectables/RmUnverifiedUsers.html",[14,0.019,19,3.555,23,0.218,24,0.193,25,0.193,28,0.336,29,0.41,37,3.259,56,2.531,59,0.218,60,0.03,61,0.014,62,0.014,69,0.297,70,0.931,71,1.036,81,1.86,84,0.536,91,0.794,129,1.967,130,0.972,134,2.216,135,2.085,143,0.753,174,0.318,175,1.24,218,1.125,329,4.248,330,3.259,416,1.86,453,2.727,459,2.963,515,2.727,604,3.259,687,3.654,688,6.538,689,5.546,690,4.763,691,4.254,692,4.254,693,4.254,694,5.546,695,4.254,696,3.654,697,4.254,698,4.254,699,4.254]],["title/interfaces/SendEmailProps.html",[247,2.576,267,0.887]],["body/interfaces/SendEmailProps.html",[14,0.019,23,0.2,24,0.177,25,0.177,28,0.325,29,0.376,34,1.083,59,0.2,60,0.028,61,0.013,62,0.013,68,2.988,69,0.272,71,0.655,78,1.429,88,0.489,90,1.912,115,0.691,124,2.098,127,0.927,130,0.891,139,0.767,143,0.691,174,0.3,178,1.706,198,1.768,218,1.032,237,2.988,238,3.351,240,3.351,242,3.351,243,4.498,247,4.118,249,1.804,252,3.351,253,2.988,254,3.351,255,2.717,256,3.351,257,2.717,258,1.804,259,3.351,260,3.351,261,3.351,263,2.167,264,4.498,265,2.032,266,4.011,267,0.936,268,4.037,269,4.037,270,2.321,271,3.351,272,3.351,273,2.167,274,3.351,275,3.351,276,2.988,277,2.988,278,3.351,299,1.912]],["title/classes/ToggleFavoriteBody.html",[60,0.026,700,2.576]],["body/classes/ToggleFavoriteBody.html",[14,0.019,23,0.268,24,0.237,25,0.237,28,0.268,59,0.268,60,0.045,61,0.016,62,0.016,69,0.364,81,2.28,84,0.656,88,0.432,196,2.28,198,2.127,203,4.717,205,3.342,286,2.025,379,3.527,700,4.389,701,4.478,702,5.213]],["title/injectables/ToggleFavoriteUseCase.html",[174,0.212,703,2.2]],["body/injectables/ToggleFavoriteUseCase.html",[14,0.019,23,0.219,24,0.194,25,0.194,28,0.285,29,0.412,59,0.219,60,0.03,61,0.014,62,0.014,69,0.298,70,0.933,71,1.037,84,0.7,86,1.092,87,0.984,88,0.46,89,1.092,91,0.796,115,0.984,126,1.092,127,0.756,130,1.411,139,0.838,143,0.756,174,0.319,175,1.244,209,2.43,286,2.236,368,3.624,379,3.624,381,3.306,424,3.665,427,3.269,703,3.306,704,3.665,705,4.268,706,5.557,707,4.268,708,4.773,709,4.268,710,4.268,711,4.268]],["title/interfaces/UpdateField.html",[267,0.887,492,2.371]],["body/interfaces/UpdateField.html",[14,0.019,23,0.164,24,0.145,25,0.145,28,0.298,29,0.308,59,0.234,60,0.023,61,0.011,62,0.011,69,0.223,71,1.03,78,1.045,88,0.44,104,2.771,115,0.566,126,0.628,127,0.566,130,1.401,139,0.896,143,0.566,174,0.262,198,1.54,199,1.325,211,1.135,218,1.916,230,4.443,231,4.573,249,3.205,267,1.095,286,1.71,288,1.89,299,1.567,375,2.05,390,1.902,394,1.567,396,2.377,397,2.05,401,2.05,408,2.715,416,1.398,487,2.925,488,2.227,490,3.495,492,4.089,493,3.495,496,3.495,498,3.495,500,3.495,501,3.706,502,2.925,504,3.495,505,3.495,509,3.495,510,2.449,511,3.495,512,2.449,513,4.075,514,2.449,515,2.05,516,2.449,517,2.449,518,2.449,519,2.449,520,2.449,521,2.449,522,2.449]],["title/classes/User.html",[60,0.026,218,0.978]],["body/classes/User.html",[14,0.019,23,0.168,24,0.149,25,0.149,28,0.276,56,4.19,59,0.168,60,0.023,61,0.011,62,0.011,69,0.228,78,1.262,81,2.809,84,0.809,87,0.578,88,0.583,101,2.009,196,1.428,198,1.564,199,2.23,218,1.225,258,2.709,286,1.489,288,2.23,381,1.943,388,2.638,391,2.302,392,2.275,403,2.97,404,4.737,408,3.822,409,3.548,412,4.92,413,2.502,414,3.548,415,3.227,416,1.428,417,2.094,418,2.502,420,2.502,421,2.502,502,2.97,515,3.451,616,2.806,617,5.312,618,5.798,620,3.979,627,2.806,628,3.979,630,3.979,633,2.806,667,3.75,712,2.806,713,3.267,714,3.267,715,3.267,716,3.267,717,3.267,718,4.633,719,3.267,720,3.267,721,3.267,722,3.267,723,3.267,724,3.267]],["title/controllers/UserControllers.html",[63,2.054,725,2.576]],["body/controllers/UserControllers.html",[14,0.019,23,0.12,24,0.106,25,0.106,28,0.314,29,0.225,34,0.649,44,1.391,45,1.79,59,0.12,60,0.017,61,0.009,62,0.009,63,1.298,65,1.298,67,1.79,69,0.163,70,0.607,71,1.152,79,4.118,80,3.808,81,2.351,84,0.677,86,1.056,87,0.952,88,0.445,89,1.056,90,2.635,91,1.003,96,5.09,102,2.043,113,1.391,114,1.79,115,0.782,117,1.628,119,2.008,121,1.391,124,1.568,126,0.459,127,0.64,129,2.486,130,1.228,134,2.8,135,2.635,136,4.118,139,0.868,140,1.581,143,1.113,148,2.008,154,2.008,195,3.463,199,2.06,218,1.169,322,1.79,323,1.499,372,2.517,379,1.882,388,2.437,700,3.463,708,3.104,725,2.517,726,2.008,727,3.104,728,3.104,729,3.104,730,3.104,731,2.338,732,5.894,733,5.946,734,3.614,735,2.338,736,2.338,737,3.614,738,2.338,739,2.338,740,3.614,741,2.338,742,2.338,743,2.338,744,2.338,745,3.614,746,2.338,747,2.338,748,2.833,749,2.008,750,2.338,751,2.338,752,2.338,753,5.376,754,2.338,755,2.338,756,2.338,757,2.338,758,2.338,759,2.338,760,2.338,761,2.338,762,2.338,763,2.338,764,2.338,765,2.338]],["title/modules/UserModule.html",[0,1.453,17,2.2]],["body/modules/UserModule.html",[0,2.064,2,1.531,3,1.627,4,1.859,5,1.859,6,1.627,7,2.917,8,2.917,14,0.019,15,3.515,17,4.451,20,2.67,21,1.859,22,1.735,23,0.16,24,0.142,25,0.142,27,2.877,28,0.371,29,0.301,33,3.126,34,0.867,35,2.393,59,0.16,60,0.022,61,0.011,62,0.011,65,2.493,161,3.766,173,2.684,207,3.766,211,2.503,216,2.176,282,3.766,368,3.673,422,3.766,427,2.393,442,3.766,703,3.766,725,3.658,748,2.877,749,2.684,766,2.684,767,3.124,768,2.684,769,2.684,770,3.124,771,3.124,772,2.684,773,2.684,774,2.684,775,2.684,776,2.684,777,3.438,778,3.124,779,3.438,780,3.124]],["title/injectables/UserRepository.html",[174,0.212,211,1.312]],["body/injectables/UserRepository.html",[14,0.019,23,0.136,24,0.121,25,0.121,28,0.272,29,0.256,59,0.204,60,0.019,61,0.01,62,0.01,69,0.185,70,0.668,71,1.179,78,0.521,84,0.752,86,1.173,87,1.057,88,0.471,89,1.173,91,1.061,104,2.961,115,0.469,126,0.781,127,0.469,130,1.298,139,0.781,143,0.469,174,0.228,175,0.773,199,1.098,211,1.412,218,1.858,230,3.325,231,3.695,245,1.577,249,3.249,267,0.954,286,1.827,288,1.648,323,2.55,375,2.55,390,1.577,394,1.299,396,2.072,397,1.699,401,1.699,408,2.366,416,1.159,487,2.55,488,1.846,489,3.416,490,4.064,491,3.416,492,4.176,493,3.657,495,2.277,496,3.657,498,3.657,499,2.277,500,4.064,501,3.96,502,3.401,504,3.657,505,3.657,507,2.277,509,3.047,510,2.03,511,3.047,512,2.03,513,3.657,514,2.03,515,1.699,516,2.03,517,2.03,518,2.03,519,2.03,520,2.03,521,2.03,522,2.03,781,2.651,782,2.651,783,2.651,784,2.651,785,2.651,786,2.651,787,2.651]],["title/classes/UserServices.html",[60,0.026,748,2.371]],["body/classes/UserServices.html",[14,0.019,23,0.14,24,0.124,25,0.124,28,0.321,29,0.263,59,0.14,60,0.019,61,0.01,62,0.01,69,0.19,70,0.682,71,1.185,78,1.414,84,0.759,86,1.185,87,1.068,88,0.499,89,1.185,90,2.819,91,1.073,101,1.516,102,2.66,115,1.106,126,0.798,127,1.068,139,1.13,143,1.019,177,2.341,178,2.638,189,1.747,196,1.192,207,3.717,214,4.62,282,3.717,286,1.56,288,2.588,372,2.828,379,2.801,381,1.621,422,3.717,442,3.717,703,3.717,727,3.488,728,3.488,729,3.488,730,3.488,748,2.603,772,2.341,773,2.341,774,2.341,775,2.341,776,2.341,788,2.341,789,2.725,790,4.061,791,2.725,792,4.061,793,2.725,794,4.061,795,2.725,796,4.061,797,2.725,798,4.061,799,2.725,800,5.752,801,2.725,802,2.725,803,2.725,804,2.725,805,2.725]],["title/coverage.html",[806,3.869]],["body/coverage.html",[6,1.383,14,0.019,18,1.58,19,1.703,25,0.121,42,1.85,44,1.58,60,0.047,61,0.01,62,0.01,63,2.655,64,1.85,66,2.281,88,0.22,93,1.58,104,1.383,113,1.58,122,1.58,162,1.58,163,1.58,164,1.58,165,1.475,174,0.411,176,2.281,178,1.162,195,1.85,197,2.281,207,1.58,208,2.281,211,0.943,218,0.702,237,3.051,247,1.85,267,1.529,280,2.034,282,1.58,283,2.281,290,2.281,298,1.85,300,3.051,368,1.383,369,3.051,388,1.302,391,1.044,393,1.85,406,2.281,415,1.85,422,1.58,423,2.281,429,1.475,430,2.281,432,1.475,442,1.58,443,2.281,446,2.281,453,1.703,462,2.034,463,2.281,487,1.703,488,3.329,492,1.703,523,2.281,531,2.281,545,2.281,555,3.051,561,1.85,594,1.85,595,3.051,615,2.281,635,1.85,636,2.281,649,1.703,653,2.034,660,2.281,666,2.281,674,3.051,676,1.85,687,2.281,690,6.555,700,1.85,701,2.281,703,1.58,704,2.281,712,2.281,725,1.85,726,2.281,748,1.703,777,2.034,779,2.034,788,2.281,806,2.034,807,2.281,808,2.656,809,2.656,810,3.984,811,5.69,812,5.974,813,2.281,814,5.974,815,5.311,816,5.974,817,2.281,818,2.034,819,6.969,820,2.281,821,2.656,822,5.69,823,4.78,824,2.281,825,2.281,826,2.281,827,2.656]],["title/dependencies.html",[3,2.317,828,2.651]],["body/dependencies.html",[3,2.188,14,0.019,29,0.405,31,3.609,32,3.218,34,1.167,37,3.218,60,0.039,61,0.014,62,0.014,121,3.273,205,2.694,217,2.694,265,2.188,266,3.218,309,3.218,325,3.218,416,2.406,417,2.694,447,3.609,565,3.218,566,3.218,733,3.609,829,4.202,830,6.133,831,4.202,832,4.202,833,4.202,834,4.202,835,4.202,836,4.202,837,4.202,838,4.202,839,4.202,840,4.202,841,5.501,842,4.202,843,4.202,844,4.202,845,4.202,846,4.202,847,4.202,848,4.202,849,4.202,850,4.202,851,4.202,852,4.202,853,4.202,854,4.202,855,4.202,856,4.202,857,4.202,858,4.202,859,4.202,860,4.202,861,4.202,862,4.202,863,4.202,864,4.202,865,3.609,866,4.202,867,4.202,868,4.202,869,4.202,870,4.202]],["title/miscellaneous/functions.html",[871,2.15,872,3.821]],["body/miscellaneous/functions.html",[6,3.679,14,0.017,61,0.017,62,0.017,69,0.402,820,4.95,871,4.014,872,4.95,873,5.764]],["title/index.html",[69,0.215,874,2.651,875,2.651]],["body/index.html",[14,0.019,24,0.192,61,0.014,62,0.014,336,2.936,339,2.936,417,2.702,558,5.312,806,3.228,876,4.215,877,4.215,878,5.512,879,4.215,880,4.215,881,4.215,882,4.215,883,4.215,884,3.62,885,6.143,886,4.215,887,4.215,888,4.215,889,6.143,890,7.066,891,4.215,892,4.215,893,4.215,894,4.215,895,4.215,896,5.512,897,4.215,898,4.215,899,4.215,900,4.215,901,5.512,902,5.512,903,4.215,904,4.215,905,4.215,906,5.512,907,5.512,908,4.215,909,4.215,910,4.215,911,4.215,912,4.215,913,3.62,914,4.215,915,4.215,916,4.215,917,4.215,918,4.215,919,4.215,920,4.215,921,4.215,922,4.215,923,3.62,924,4.215,925,4.215,926,4.215,927,4.215,928,4.215,929,4.215,930,2.936]],["title/guards/isLoggedIn.html",[44,2.2,818,2.833]],["body/guards/isLoggedIn.html",[14,0.019,23,0.201,24,0.178,25,0.178,28,0.325,29,0.377,34,1.086,44,3.122,59,0.201,60,0.028,61,0.013,62,0.013,69,0.273,70,0.881,84,0.661,86,1.031,87,0.929,88,0.434,89,1.031,90,2.572,91,0.73,115,0.929,124,2.41,126,1.031,127,0.693,129,1.809,134,2.038,139,0.769,143,0.929,174,0.301,210,1.809,221,2.427,249,2.427,258,1.809,263,2.173,265,2.038,273,2.173,394,1.918,451,2.997,453,3.364,502,3.364,732,3.361,817,3.361,865,3.361,931,3.913,932,6.598,933,3.913,934,3.913,935,6.326,936,3.913,937,5.247,938,5.921,939,3.913,940,3.913,941,3.913,942,3.913,943,3.913,944,3.913,945,3.913,946,3.913]],["title/license.html",[874,2.651,875,2.651,930,2.15]],["body/license.html",[14,0.013,22,2.179,61,0.013,62,0.013,121,2.334,268,2.334,269,2.334,355,3.006,501,2.733,583,3.006,807,3.37,930,4.13,947,3.924,948,3.924,949,5.257,950,5.257,951,3.37,952,3.924,953,5.257,954,3.924,955,3.37,956,3.37,957,3.924,958,3.924,959,3.924,960,3.924,961,3.924,962,3.924,963,3.924,964,5.257,965,6.943,966,3.924,967,3.924,968,3.924,969,5.929,970,3.924,971,5.257,972,3.924,973,3.924,974,6.334,975,3.924,976,3.924,977,3.924,978,3.924,979,3.924,980,3.924,981,3.924,982,3.924,983,3.924,984,3.924,985,3.924,986,3.924,987,3.924,988,3.37,989,3.924,990,3.924,991,3.924,992,3.924,993,3.924,994,3.924,995,3.924,996,3.924,997,3.924,998,3.924,999,3.924,1000,3.924,1001,3.924,1002,3.924,1003,3.924,1004,3.924,1005,3.924,1006,3.924,1007,3.924,1008,3.924,1009,3.924,1010,3.924,1011,3.924,1012,3.924,1013,3.924,1014,3.924,1015,3.924,1016,3.924,1017,3.924,1018,3.924,1019,3.924,1020,3.924,1021,3.924,1022,3.924,1023,3.924,1024,3.924,1025,3.924,1026,3.924,1027,3.924,1028,3.924,1029,3.924,1030,3.924,1031,3.924,1032,3.924,1033,3.924,1034,3.924,1035,3.924,1036,3.924,1037,3.924,1038,3.924]],["title/modules.html",[2,2.475]],["body/modules.html",[1,3.673,2,2.585,13,3.381,14,0.016,15,2.929,16,3.381,17,3.137,61,0.016,62,0.016,161,3.137,913,6.207,1039,7.227,1040,7.227,1041,7.34,1042,5.274,1043,5.274]],["title/overview.html",[1044,4.338]],["body/overview.html",[0,1.198,1,5.008,2,1.494,3,1.587,4,1.813,5,1.813,6,1.587,7,1.693,8,1.693,9,2.618,10,2.618,11,2.618,12,2.618,13,4.663,14,0.019,15,3.344,16,4.452,17,4.439,18,3.851,19,3.32,20,2.623,21,1.813,22,1.693,61,0.011,62,0.011,65,1.693,122,3.081,158,2.618,159,2.618,160,2.618,161,3.851,162,3.081,163,3.081,164,3.081,165,2.876,175,0.888,178,2.83,196,1.333,207,3.081,211,2.297,232,2.618,233,2.618,234,2.618,282,3.081,299,1.494,368,3.371,422,3.081,429,2.876,432,2.876,442,3.081,646,2.618,648,2.618,649,3.32,696,2.618,703,3.081,766,2.618,768,2.618,769,2.618,818,2.334,1044,2.618,1045,3.048,1046,3.048,1047,3.048,1048,3.048,1049,3.048]],["title/properties.html",[198,1.502,828,2.651]],["body/properties.html",[14,0.018,61,0.016,62,0.016,198,1.867,276,4.236,277,4.236,884,4.75,923,4.75,930,3.852,951,4.75,955,4.75,956,4.75,1050,5.53,1051,5.53,1052,5.53,1053,5.53,1054,5.53]],["title/miscellaneous/variables.html",[871,2.15,1055,3.821]],["body/miscellaneous/variables.html",[14,0.019,42,2.965,53,2.225,56,1.728,61,0.011,62,0.011,69,0.203,70,0.488,71,0.488,88,0.459,90,2.086,101,2.071,117,2.023,129,1.343,130,0.663,135,1.424,139,1.253,143,0.514,218,1.632,250,5.073,251,5.073,255,2.023,257,2.023,258,2.33,280,3.261,298,2.965,300,2.225,301,2.495,302,2.495,303,2.495,304,2.495,305,2.495,306,2.495,307,2.495,308,2.495,309,2.225,310,2.495,311,2.495,312,2.495,313,2.495,314,2.495,315,2.495,316,2.495,317,2.495,318,2.495,319,2.495,320,2.495,321,2.495,322,2.225,323,1.862,324,2.495,325,2.225,326,2.495,327,2.495,328,2.495,329,3.261,330,2.225,331,2.495,332,2.495,333,2.495,334,2.495,335,2.495,336,2.023,337,2.225,338,2.225,339,2.023,340,2.225,341,3.656,342,2.495,343,2.495,344,2.495,345,2.495,346,2.495,347,2.495,348,2.495,349,3.656,350,2.225,351,2.023,352,2.495,353,2.495,354,2.495,355,2.225,356,2.495,357,2.495,358,2.495,359,2.225,360,4.765,361,2.495,362,2.495,363,2.495,364,2.495,365,3.656,366,3.656,367,3.656,388,2.469,391,1.98,416,2.426,453,1.862,653,3.261,777,3.261,779,3.261,813,2.495,824,2.495,825,2.495,826,2.495,871,2.023,988,4.765,1055,2.495,1056,2.905,1057,2.905,1058,2.905,1059,2.905,1060,2.905,1061,2.905,1062,2.905,1063,2.905,1064,2.905,1065,2.905,1066,2.905,1067,2.905,1068,2.905,1069,5.039]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"guards/isLoggedIn.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":690,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{},"coverage.html":{}}}],["0.14.1",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":696,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{},"overview.html":{}}}],["1.0.0",{"_index":1051,"title":{},"body":{"properties.html":{}}}],["1.4.6",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["1.99",{"_index":585,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["10",{"_index":1048,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":530,"title":{},"body":{"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["100)@isemail",{"_index":525,"title":{},"body":{"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["1000",{"_index":330,"title":{},"body":{"interfaces/Env.html":{},"injectables/RmUnverifiedUsers.html":{},"miscellaneous/variables.html":{}}}],["12.0.1",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["14.99",{"_index":588,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["16",{"_index":201,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["16.4.5",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1047,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["1h",{"_index":550,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["2.1.6",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["2.99",{"_index":581,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["20",{"_index":577,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["2024",{"_index":583,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"license.html":{}}}],["24",{"_index":328,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["24.99",{"_index":587,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["24}h",{"_index":544,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["3",{"_index":1046,"title":{},"body":{"overview.html":{}}}],["3.2.3",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["3.25",{"_index":584,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["4.0",{"_index":951,"title":{},"body":{"license.html":{},"properties.html":{}}}],["4.0.2",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":295,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{},"injectables/LoginUseCase.html":{}}}],["401",{"_index":946,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["403",{"_index":943,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["404",{"_index":224,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{}}}],["409",{"_index":679,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["422",{"_index":455,"title":{},"body":{"classes/HandleError.html":{},"injectables/LoginUseCase.html":{}}}],["465",{"_index":256,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["5.1.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["5.1.7",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["5.99",{"_index":580,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["50",{"_index":671,"title":{},"body":{"classes/RegisterBody.html":{}}}],["500",{"_index":461,"title":{},"body":{"classes/HandleError.html":{}}}],["6",{"_index":1045,"title":{},"body":{"overview.html":{}}}],["6.37.3",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["6.9.14",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":329,"title":{},"body":{"interfaces/Env.html":{},"injectables/RmUnverifiedUsers.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":574,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["7.4.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1049,"title":{},"body":{"overview.html":{}}}],["8.4.1",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":342,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1032,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1001,"title":{},"body":{"license.html":{}}}],["allownull",{"_index":618,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["already",{"_index":352,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":914,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":980,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1011,"title":{},"body":{"license.html":{}}}],["api",{"_index":1052,"title":{},"body":{"properties.html":{}}}],["api_addr",{"_index":301,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":892,"title":{},"body":{"index.html":{}}}],["applications",{"_index":883,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1003,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":986,"title":{},"body":{"license.html":{}}}],["argumentshost",{"_index":466,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1036,"title":{},"body":{"license.html":{}}}],["array.from",{"_index":573,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["array.isarray(msg",{"_index":481,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["associated",{"_index":966,"title":{},"body":{"license.html":{}}}],["async",{"_index":71,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"miscellaneous/variables.html":{}}}],["attributes",{"_index":513,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["attribution",{"_index":949,"title":{},"body":{"license.html":{}}}],["auth",{"_index":68,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["auth.controller.js",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service.js",{"_index":123,"title":{},"body":{"controllers/AuthControllers.html":{},"modules/AuthModule.html":{}}}],["auth/dto/registerbody.dto.js",{"_index":510,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["auth_duration_days",{"_index":302,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["authcontrollers",{"_index":64,"title":{"controllers/AuthControllers.html":{}},"body":{"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":347,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":13,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmsg",{"_index":345,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":923,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":1025,"title":{},"body":{"license.html":{}}}],["authservices",{"_index":122,"title":{"injectables/AuthServices.html":{}},"body":{"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":144,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["autoincrement",{"_index":620,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["available",{"_index":1043,"title":{},"body":{"modules.html":{}}}],["await",{"_index":130,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"controllers/ProductsControllers.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":915,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":217,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"dependencies.html":{}}}],["bcrypt.compare(passwd",{"_index":537,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["bcrypt.gensalt(10",{"_index":226,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["bcrypt.hash(newpasswd",{"_index":228,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{}}}],["bcrypt.hash(passwd",{"_index":681,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["belongstomany",{"_index":630,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["belongstomany(undefined",{"_index":627,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["best",{"_index":586,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/UserControllers.html":{}}}],["boolean",{"_index":502,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"guards/isLoggedIn.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1041,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1039,"title":{},"body":{"modules.html":{}}}],["building",{"_index":879,"title":{},"body":{"index.html":{}}}],["c",{"_index":954,"title":{},"body":{"license.html":{}}}],["cache",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":932,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["canactivate(context",{"_index":934,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["catch",{"_index":134,"title":{},"body":{"controllers/AuthControllers.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"controllers/ProductsControllers.html":{},"injectables/RmUnverifiedUsers.html":{},"controllers/UserControllers.html":{},"guards/isLoggedIn.html":{}}}],["catch(exception",{"_index":465,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":469,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["category",{"_index":435,"title":{},"body":{"injectables/GetProductsUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{}}}],["cc",{"_index":1053,"title":{},"body":{"properties.html":{}}}],["change/${recoverytoken",{"_index":553,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["changepasswd",{"_index":727,"title":{},"body":{"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["changepasswd(@body",{"_index":755,"title":{},"body":{"controllers/UserControllers.html":{}}}],["changepasswd(body",{"_index":731,"title":{},"body":{"controllers/UserControllers.html":{}}}],["changepasswd(token",{"_index":790,"title":{},"body":{"classes/UserServices.html":{}}}],["changepasswdbody",{"_index":195,"title":{"classes/ChangePasswdBody.html":{}},"body":{"classes/ChangePasswdBody.html":{},"controllers/UserControllers.html":{},"coverage.html":{}}}],["changepasswdusecase",{"_index":207,"title":{"injectables/ChangePasswdUseCase.html":{}},"body":{"injectables/ChangePasswdUseCase.html":{},"modules/UserModule.html":{},"classes/UserServices.html":{},"coverage.html":{},"overview.html":{}}}],["changes",{"_index":990,"title":{},"body":{"license.html":{}}}],["charge",{"_index":961,"title":{},"body":{"license.html":{}}}],["checkpasswd",{"_index":536,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["claim",{"_index":1028,"title":{},"body":{"license.html":{}}}],["class",{"_index":60,"title":{"classes/ChangePasswdBody.html":{},"classes/Favorites.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginBody.html":{},"classes/Products.html":{},"classes/RegisterBody.html":{},"classes/ToggleFavoriteBody.html":{},"classes/User.html":{},"classes/UserServices.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"coverage.html":{},"dependencies.html":{},"guards/isLoggedIn.html":{}}}],["classes",{"_index":196,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/Favorites.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginBody.html":{},"classes/Products.html":{},"classes/RegisterBody.html":{},"classes/ToggleFavoriteBody.html":{},"classes/User.html":{},"classes/UserServices.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":232,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":233,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":234,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":646,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":647,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":648,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":766,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":768,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":767,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":769,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":412,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["column({type",{"_index":617,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["commercial",{"_index":999,"title":{},"body":{"license.html":{}}}],["common.service.js",{"_index":236,"title":{},"body":{"modules/CommonModule.html":{}}}],["common/common.module.js",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["common/common.service.js",{"_index":189,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"classes/UserServices.html":{}}}],["commonmodule",{"_index":161,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commons",{"_index":948,"title":{},"body":{"license.html":{}}}],["commonservices",{"_index":178,"title":{"injectables/CommonServices.html":{}},"body":{"injectables/AuthServices.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"classes/UserServices.html":{},"coverage.html":{},"overview.html":{}}}],["compression",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":984,"title":{},"body":{"license.html":{}}}],["config/configuration.js",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UserModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":124,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"controllers/UserControllers.html":{},"guards/isLoggedIn.html":{}}}],["configuration",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Env.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1037,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":459,"title":{},"body":{"classes/HandleError.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"injectables/RmUnverifiedUsers.html":{}}}],["console.log('seed",{"_index":590,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["const",{"_index":143,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"controllers/ProductsControllers.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":126,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["constructor(@inject",{"_index":270,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/SendEmailProps.html":{}}}],["constructor(commonservices",{"_index":177,"title":{},"body":{"injectables/AuthServices.html":{},"classes/UserServices.html":{}}}],["constructor(configservice",{"_index":210,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"injectables/RegisterUseCase.html":{},"guards/isLoggedIn.html":{}}}],["constructor(favoritemodel",{"_index":374,"title":{},"body":{"injectables/FavoriteRepository.html":{}}}],["constructor(favoriterepository",{"_index":424,"title":{},"body":{"injectables/GetFavoritesUseCase.html":{},"injectables/ToggleFavoriteUseCase.html":{}}}],["constructor(getproductsusecase",{"_index":661,"title":{},"body":{"injectables/ProductsServices.html":{}}}],["constructor(productmodel",{"_index":655,"title":{},"body":{"injectables/ProductsRepository.html":{}}}],["constructor(productsrepository",{"_index":431,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["constructor(usermodel",{"_index":781,"title":{},"body":{"injectables/UserRepository.html":{}}}],["context",{"_index":937,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["context.switchtohttp().getrequest",{"_index":939,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["contract",{"_index":1033,"title":{},"body":{"license.html":{}}}],["controller",{"_index":63,"title":{"controllers/AuthControllers.html":{},"controllers/ProductsControllers.html":{},"controllers/UserControllers.html":{}},"body":{"controllers/AuthControllers.html":{},"controllers/ProductsControllers.html":{},"controllers/UserControllers.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":125,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["controller('/products",{"_index":642,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["controller('/user",{"_index":751,"title":{},"body":{"controllers/UserControllers.html":{}}}],["controllers",{"_index":65,"title":{},"body":{"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":325,"title":{},"body":{"interfaces/Env.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cookieoptions",{"_index":310,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["copies",{"_index":982,"title":{},"body":{"license.html":{}}}],["copy",{"_index":964,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":953,"title":{},"body":{"license.html":{}}}],["cors",{"_index":309,"title":{},"body":{"interfaces/Env.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["corsoptions",{"_index":308,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":806,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":489,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["create(userattributes",{"_index":493,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["created",{"_index":365,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":698,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["createfavorite",{"_index":370,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["createfavorite(userid",{"_index":378,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["creative",{"_index":947,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":324,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["credit",{"_index":987,"title":{},"body":{"license.html":{}}}],["cron",{"_index":693,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["cron('0",{"_index":689,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["ctx",{"_index":470,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":472,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["custom",{"_index":222,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["custom.status",{"_index":458,"title":{},"body":{"classes/HandleError.html":{}}}],["damages",{"_index":1029,"title":{},"body":{"license.html":{}}}],["data",{"_index":185,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["data/database.db",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data?.favoriteproducts",{"_index":405,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["database.providers.js",{"_index":281,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module.js",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{}}}],["database/seed/populateproducts.service.js",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":15,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":280,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":413,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["datatype.bigint",{"_index":421,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["datatype.boolean",{"_index":724,"title":{},"body":{"classes/User.html":{}}}],["datatype.decimal",{"_index":634,"title":{},"body":{"classes/Products.html":{}}}],["datatype.string",{"_index":633,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["datatype.string(100",{"_index":723,"title":{},"body":{"classes/User.html":{}}}],["datatype.string(50",{"_index":722,"title":{},"body":{"classes/User.html":{}}}],["date(date.now",{"_index":695,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["deal",{"_index":968,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1038,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":81,"title":{},"body":{"controllers/AuthControllers.html":{},"classes/ChangePasswdBody.html":{},"classes/Favorites.html":{},"classes/LoginBody.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"classes/RegisterBody.html":{},"injectables/RmUnverifiedUsers.html":{},"classes/ToggleFavoriteBody.html":{},"classes/User.html":{},"controllers/UserControllers.html":{}}}],["default",{"_index":250,"title":{},"body":{"injectables/CommonServices.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["defined",{"_index":84,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"injectables/RmUnverifiedUsers.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["delete",{"_index":323,"title":{},"body":{"interfaces/Env.html":{},"interfaces/IUserRepository.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["delete('/delete",{"_index":737,"title":{},"body":{"controllers/UserControllers.html":{}}}],["delete(target",{"_index":496,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["deleted",{"_index":366,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["deletefavorite",{"_index":371,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["deletefavorite(userid",{"_index":382,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["deleteuser",{"_index":728,"title":{},"body":{"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["deleteuser(@req",{"_index":758,"title":{},"body":{"controllers/UserControllers.html":{}}}],["deleteuser(req",{"_index":736,"title":{},"body":{"controllers/UserControllers.html":{}}}],["deleteuser(token",{"_index":792,"title":{},"body":{"classes/UserServices.html":{}}}],["deleteuserusecase",{"_index":282,"title":{"injectables/DeleteUserUseCase.html":{}},"body":{"injectables/DeleteUserUseCase.html":{},"modules/UserModule.html":{},"classes/UserServices.html":{},"coverage.html":{},"overview.html":{}}}],["denied",{"_index":341,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":884,"title":{},"body":{"index.html":{},"properties.html":{}}}],["develop",{"_index":276,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{},"properties.html":{}}}],["development",{"_index":893,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":978,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":807,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doing",{"_index":1010,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["dto/changepasswdbody.dto.js",{"_index":747,"title":{},"body":{"controllers/UserControllers.html":{}}}],["dto/loginbody.dto.js",{"_index":120,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/LoginUseCase.html":{}}}],["dto/registerbody.dto.js",{"_index":112,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{}}}],["dto/togglefavoritebody.dto.js",{"_index":750,"title":{},"body":{"controllers/UserControllers.html":{}}}],["e2e",{"_index":903,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":880,"title":{},"body":{"index.html":{}}}],["email",{"_index":101,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"classes/User.html":{},"classes/UserServices.html":{},"miscellaneous/variables.html":{}}}],["emailexists",{"_index":351,"title":{},"body":{"interfaces/Env.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"miscellaneous/variables.html":{}}}],["emailtoken",{"_index":182,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["emailverify",{"_index":72,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{}}}],["emailverify(@param('token",{"_index":128,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["emailverify(emailtoken",{"_index":180,"title":{},"body":{"injectables/AuthServices.html":{}}}],["emailverify(token",{"_index":77,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["emailverifyusecase",{"_index":162,"title":{"injectables/EmailVerifyUseCase.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/EmailVerifyUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["endorses",{"_index":997,"title":{},"body":{"license.html":{}}}],["env",{"_index":298,"title":{"interfaces/Env.html":{}},"body":{"interfaces/Env.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":135,"title":{},"body":{"controllers/AuthControllers.html":{},"interfaces/Env.html":{},"classes/HandleError.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"controllers/ProductsControllers.html":{},"injectables/RmUnverifiedUsers.html":{},"controllers/UserControllers.html":{},"miscellaneous/variables.html":{}}}],["err.custom",{"_index":456,"title":{},"body":{"classes/HandleError.html":{}}}],["err.message",{"_index":452,"title":{},"body":{"classes/HandleError.html":{}}}],["error",{"_index":338,"title":{},"body":{"interfaces/Env.html":{},"classes/HandleError.html":{},"miscellaneous/variables.html":{}}}],["etag",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["event",{"_index":1023,"title":{},"body":{"license.html":{}}}],["example",{"_index":889,"title":{},"body":{"index.html":{}}}],["exception",{"_index":468,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":475,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":473,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":464,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":514,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["execute",{"_index":209,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/ToggleFavoriteUseCase.html":{}}}],["execute(email",{"_index":213,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{}}}],["execute(id",{"_index":285,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetUserUseCase.html":{}}}],["execute(search",{"_index":434,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["execute(undefined",{"_index":533,"title":{},"body":{"injectables/LoginUseCase.html":{},"injectables/RegisterUseCase.html":{}}}],["execute(userid",{"_index":706,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{}}}],["executioncontext",{"_index":935,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["exists",{"_index":353,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":542,"title":{},"body":{"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["export",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":121,"title":{},"body":{"controllers/AuthControllers.html":{},"interfaces/Env.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UserControllers.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":420,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["extractjwtpayload",{"_index":239,"title":{},"body":{"injectables/CommonServices.html":{}}}],["extractjwtpayload(token",{"_index":242,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["faker",{"_index":565,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"dependencies.html":{}}}],["faker.commerce.productdescription().slice(0",{"_index":578,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["faker.commerce.productname().slice(0",{"_index":576,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["false",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/Favorites.html":{},"classes/Products.html":{},"injectables/RmUnverifiedUsers.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":708,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{},"controllers/UserControllers.html":{}}}],["favorite.entity.js",{"_index":389,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["favoritemodel",{"_index":377,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["favoriteproducts",{"_index":404,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"classes/User.html":{}}}],["favoriteproviders",{"_index":779,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoriterepository",{"_index":368,"title":{"injectables/FavoriteRepository.html":{}},"body":{"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"injectables/ToggleFavoriteUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["favorites",{"_index":388,"title":{"classes/Favorites.html":{}},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"classes/Products.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favorites/favorite.entity.js",{"_index":720,"title":{},"body":{"classes/User.html":{}}}],["favorites/favorite.repository.js",{"_index":427,"title":{},"body":{"injectables/GetFavoritesUseCase.html":{},"injectables/ToggleFavoriteUseCase.html":{},"modules/UserModule.html":{}}}],["field",{"_index":504,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["field[fieldkey",{"_index":516,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["fieldkey",{"_index":511,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["fieldname",{"_index":230,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["fieldvalue",{"_index":231,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["file",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"coverage.html":{},"guards/isLoggedIn.html":{}}}],["files",{"_index":967,"title":{},"body":{"license.html":{}}}],["filteredproducts",{"_index":644,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["findattributeoptions",{"_index":509,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["findbyfield",{"_index":490,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["findbyfield(field",{"_index":499,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["fitness",{"_index":1019,"title":{},"body":{"license.html":{}}}],["following",{"_index":983,"title":{},"body":{"license.html":{}}}],["foreignkey",{"_index":414,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["foreignkey(undefined)@column({type",{"_index":407,"title":{},"body":{"classes/Favorites.html":{}}}],["found",{"_index":364,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":878,"title":{},"body":{"index.html":{}}}],["free",{"_index":960,"title":{},"body":{"license.html":{}}}],["function",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":872,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generateproducts",{"_index":556,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["get('/email",{"_index":82,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["get('/get",{"_index":740,"title":{},"body":{"controllers/UserControllers.html":{}}}],["get('/passwd",{"_index":98,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["get('/token",{"_index":109,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["getallproducts",{"_index":596,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["getbycategory",{"_index":597,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["getbycategory(category",{"_index":600,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["getbygenericsearch",{"_index":598,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["getbygenericsearch(search",{"_index":602,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["getfavorites",{"_index":372,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["getfavorites(@req",{"_index":764,"title":{},"body":{"controllers/UserControllers.html":{}}}],["getfavorites(id",{"_index":384,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["getfavorites(req",{"_index":739,"title":{},"body":{"controllers/UserControllers.html":{}}}],["getfavorites(token",{"_index":794,"title":{},"body":{"classes/UserServices.html":{}}}],["getfavoritesusecase",{"_index":422,"title":{"injectables/GetFavoritesUseCase.html":{}},"body":{"injectables/GetFavoritesUseCase.html":{},"modules/UserModule.html":{},"classes/UserServices.html":{},"coverage.html":{},"overview.html":{}}}],["getonefavorite",{"_index":373,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["getonefavorite(userid",{"_index":386,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["getproducts",{"_index":637,"title":{},"body":{"controllers/ProductsControllers.html":{},"injectables/ProductsServices.html":{}}}],["getproducts(@query",{"_index":643,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["getproducts(query",{"_index":638,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["getproducts(search",{"_index":663,"title":{},"body":{"injectables/ProductsServices.html":{}}}],["getproductsusecase",{"_index":429,"title":{"injectables/GetProductsUseCase.html":{}},"body":{"injectables/GetProductsUseCase.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsServices.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":874,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":729,"title":{},"body":{"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["getuser(@req",{"_index":752,"title":{},"body":{"controllers/UserControllers.html":{}}}],["getuser(req",{"_index":742,"title":{},"body":{"controllers/UserControllers.html":{}}}],["getuser(token",{"_index":796,"title":{},"body":{"classes/UserServices.html":{}}}],["getuserusecase",{"_index":442,"title":{"injectables/GetUserUseCase.html":{}},"body":{"injectables/GetUserUseCase.html":{},"modules/UserModule.html":{},"classes/UserServices.html":{},"coverage.html":{},"overview.html":{}}}],["give",{"_index":985,"title":{},"body":{"license.html":{}}}],["granted",{"_index":959,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1042,"title":{},"body":{"modules.html":{}}}],["great",{"_index":334,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["grow",{"_index":910,"title":{},"body":{"index.html":{}}}],["guard",{"_index":818,"title":{"guards/isLoggedIn.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/isloggedin.guard.js",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"controllers/UserControllers.html":{}}}],["guards",{"_index":931,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["handlecron",{"_index":688,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["handleerror",{"_index":113,"title":{"classes/HandleError.html":{}},"body":{"controllers/AuthControllers.html":{},"classes/HandleError.html":{},"controllers/ProductsControllers.html":{},"controllers/UserControllers.html":{},"coverage.html":{}}}],["handleerror.http(err",{"_index":136,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/ProductsControllers.html":{},"controllers/UserControllers.html":{}}}],["hashednewpasswd",{"_index":227,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{}}}],["hashedpasswd",{"_index":680,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["here",{"_index":920,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":958,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1026,"title":{},"body":{"license.html":{}}}],["host",{"_index":253,"title":{},"body":{"injectables/CommonServices.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/SendEmailProps.html":{}}}],["host.switchtohttp",{"_index":471,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":278,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["http",{"_index":447,"title":{},"body":{"classes/HandleError.html":{},"dependencies.html":{}}}],["http(err",{"_index":448,"title":{},"body":{"classes/HandleError.html":{}}}],["httpexception",{"_index":451,"title":{},"body":{"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"guards/isLoggedIn.html":{}}}],["httpexception('a",{"_index":460,"title":{},"body":{"classes/HandleError.html":{}}}],["httpexception('forbidden",{"_index":942,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["httpexception('unauthorized",{"_index":945,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["httpexception(custom.msg",{"_index":457,"title":{},"body":{"classes/HandleError.html":{}}}],["httpexception(err.message",{"_index":454,"title":{},"body":{"classes/HandleError.html":{}}}],["httpexceptionfilter",{"_index":462,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":326,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":927,"title":{},"body":{"index.html":{}}}],["id",{"_index":288,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"classes/Products.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{}}}],["identifier",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["ifavoritesrepository",{"_index":393,"title":{"interfaces/IFavoritesRepository.html":{}},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"coverage.html":{}}}],["img",{"_index":568,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/Products.html":{}}}],["implements",{"_index":394,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"guards/isLoggedIn.html":{}}}],["implied",{"_index":1015,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["imports",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":402,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["including",{"_index":971,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":349,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":69,"title":{"index.html":{}},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"miscellaneous/functions.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":989,"title":{},"body":{"license.html":{}}}],["info",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["init",{"_index":557,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["inject",{"_index":115,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["inject('favorites",{"_index":395,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["inject('products",{"_index":606,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["inject('user",{"_index":397,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["injectable",{"_index":174,"title":{"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/RmUnverifiedUsers.html":{},"injectables/ToggleFavoriteUseCase.html":{},"injectables/UserRepository.html":{}},"body":{"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"guards/isLoggedIn.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/RmUnverifiedUsers.html":{},"injectables/ToggleFavoriteUseCase.html":{},"injectables/UserRepository.html":{},"overview.html":{}}}],["installation",{"_index":888,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":891,"title":{},"body":{"index.html":{}}}],["interface",{"_index":267,"title":{"interfaces/Env.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"interfaces/UpdateField.html":{}},"body":{"injectables/CommonServices.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["interfaces",{"_index":299,"title":{},"body":{"interfaces/Env.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"interfaces/UpdateField.html":{},"overview.html":{}}}],["international",{"_index":952,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":344,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["invalidtoken",{"_index":343,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":528,"title":{},"body":{"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["isloggedin",{"_index":44,"title":{"guards/isLoggedIn.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"controllers/UserControllers.html":{},"coverage.html":{},"guards/isLoggedIn.html":{}}}],["isnotempty",{"_index":203,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/LoginBody.html":{},"classes/RegisterBody.html":{},"classes/ToggleFavoriteBody.html":{}}}],["isnotempty()@length(0",{"_index":524,"title":{},"body":{"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["isnotempty()@length(3",{"_index":670,"title":{},"body":{"classes/RegisterBody.html":{}}}],["isnotempty()@length(6",{"_index":200,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["iuserrepository",{"_index":487,"title":{"interfaces/IUserRepository.html":{}},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["jobs/rmunverifiedusers.service.js",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":917,"title":{},"body":{"index.html":{}}}],["js/faker",{"_index":566,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"dependencies.html":{}}}],["json.parse(raw)['message",{"_index":479,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["jsonwebtoken",{"_index":265,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"dependencies.html":{},"guards/isLoggedIn.html":{}}}],["jwt",{"_index":263,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"guards/isLoggedIn.html":{}}}],["jwt.sign",{"_index":540,"title":{},"body":{"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["jwt.verify",{"_index":272,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["jwt.verify(token",{"_index":944,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["jwtpayload",{"_index":264,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["kamil",{"_index":924,"title":{},"body":{"index.html":{}}}],["kind",{"_index":1014,"title":{},"body":{"license.html":{}}}],["later",{"_index":340,"title":{},"body":{"interfaces/Env.html":{},"classes/HandleError.html":{},"miscellaneous/variables.html":{}}}],["legal",{"_index":1004,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1008,"title":{},"body":{"license.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":204,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/LoginBody.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/RegisterBody.html":{}}}],["length(0",{"_index":529,"title":{},"body":{"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["length(3",{"_index":673,"title":{},"body":{"classes/RegisterBody.html":{}}}],["length(6",{"_index":206,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/LoginBody.html":{},"classes/RegisterBody.html":{}}}],["liability",{"_index":1030,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1027,"title":{},"body":{"license.html":{}}}],["license",{"_index":930,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":907,"title":{},"body":{"index.html":{}}}],["licensor",{"_index":996,"title":{},"body":{"license.html":{}}}],["limit",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["limitation",{"_index":972,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1016,"title":{},"body":{"license.html":{}}}],["link",{"_index":269,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"license.html":{}}}],["literal",{"_index":639,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["load",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":73,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{}}}],["login(@body",{"_index":142,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["login(body",{"_index":92,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["login(data",{"_index":183,"title":{},"body":{"injectables/AuthServices.html":{}}}],["loginbody",{"_index":93,"title":{"classes/LoginBody.html":{}},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"coverage.html":{}}}],["loginusecase",{"_index":163,"title":{"injectables/LoginUseCase.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/LoginUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["made",{"_index":991,"title":{},"body":{"license.html":{}}}],["manner",{"_index":993,"title":{},"body":{"license.html":{}}}],["matching",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"guards/isLoggedIn.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":998,"title":{},"body":{"license.html":{}}}],["maxage",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["measures",{"_index":1007,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1018,"title":{},"body":{"license.html":{}}}],["merge",{"_index":976,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":70,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/RmUnverifiedUsers.html":{},"injectables/ToggleFavoriteUseCase.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["miguel",{"_index":955,"title":{},"body":{"license.html":{},"properties.html":{}}}],["miscellaneous",{"_index":871,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":906,"title":{},"body":{"index.html":{}}}],["mode",{"_index":896,"title":{},"body":{"index.html":{}}}],["model",{"_index":403,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["modify",{"_index":975,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module.js",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.entity.js",{"_index":564,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["modules/products/products.module.js",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.entity.js",{"_index":692,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["modules/user/user.module.js",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":919,"title":{},"body":{"index.html":{}}}],["msg",{"_index":140,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"controllers/UserControllers.html":{}}}],["msg[0",{"_index":482,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["myśliwiec",{"_index":925,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/ToggleFavoriteUseCase.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["nc",{"_index":1054,"title":{},"body":{"properties.html":{}}}],["nest",{"_index":885,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":929,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"dependencies.html":{},"guards/isLoggedIn.html":{}}}],["nestjs/config",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"dependencies.html":{},"guards/isLoggedIn.html":{}}}],["nestjs/core",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/RmUnverifiedUsers.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":453,"title":{},"body":{"classes/HandleError.html":{},"injectables/RmUnverifiedUsers.html":{},"coverage.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["newpasswd",{"_index":214,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"classes/UserServices.html":{}}}],["node.js",{"_index":877,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":303,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":266,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":252,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["noemailtoken",{"_index":354,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["noncommercial",{"_index":950,"title":{},"body":{"license.html":{}}}],["none",{"_index":332,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1022,"title":{},"body":{"license.html":{}}}],["notfound",{"_index":363,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["noverifiedemail",{"_index":356,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":890,"title":{},"body":{"index.html":{}}}],["number",{"_index":286,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/Products.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{}}}],["number(process.env.auth_duration_days",{"_index":317,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["number(process.env.port",{"_index":312,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["object.keys(field)[0",{"_index":512,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["observable",{"_index":938,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["obtaining",{"_index":963,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":337,"title":{},"body":{"interfaces/Env.html":{},"classes/HandleError.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":346,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["oldprice",{"_index":569,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/Products.html":{}}}],["op",{"_index":604,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"injectables/RmUnverifiedUsers.html":{}}}],["op.like",{"_index":612,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["op.lt",{"_index":699,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["op.or",{"_index":609,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["open",{"_index":908,"title":{},"body":{"index.html":{}}}],["optional",{"_index":89,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/ToggleFavoriteUseCase.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["origin",{"_index":319,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["origin_addr",{"_index":304,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":1009,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1035,"title":{},"body":{"license.html":{}}}],["out",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1044,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":828,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":116,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["param('token",{"_index":155,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["paramdate",{"_index":694,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/ToggleFavoriteUseCase.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["parser",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1020,"title":{},"body":{"license.html":{}}}],["pass",{"_index":260,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["passwd",{"_index":199,"title":{},"body":{"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{}}}],["passwdrecovery",{"_index":74,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{}}}],["passwdrecovery(@param('email",{"_index":150,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["passwdrecovery(email",{"_index":97,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{}}}],["passwdrecoveryusecase",{"_index":164,"title":{"injectables/PasswdRecoveryUseCase.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/PasswdRecoveryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["password",{"_index":350,"title":{},"body":{"interfaces/Env.html":{},"injectables/PasswdRecoveryUseCase.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":322,"title":{},"body":{"interfaces/Env.html":{},"controllers/UserControllers.html":{},"miscellaneous/variables.html":{}}}],["patch('/change",{"_index":734,"title":{},"body":{"controllers/UserControllers.html":{}}}],["payload",{"_index":271,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["payload[payloadname",{"_index":274,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["payloadname",{"_index":243,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["permission",{"_index":957,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1012,"title":{},"body":{"license.html":{}}}],["person",{"_index":962,"title":{},"body":{"license.html":{}}}],["please",{"_index":339,"title":{},"body":{"interfaces/Env.html":{},"classes/HandleError.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["popular",{"_index":582,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["populateproductsservice",{"_index":18,"title":{"injectables/PopulateProductsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"coverage.html":{},"overview.html":{}}}],["port",{"_index":255,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/Env.html":{},"interfaces/SendEmailProps.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":117,"title":{},"body":{"controllers/AuthControllers.html":{},"interfaces/Env.html":{},"controllers/UserControllers.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":94,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["post('/register",{"_index":105,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["post('/toggle",{"_index":745,"title":{},"body":{"controllers/UserControllers.html":{}}}],["prefix",{"_index":67,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/ProductsControllers.html":{},"controllers/UserControllers.html":{}}}],["price",{"_index":570,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/Products.html":{}}}],["primarykey",{"_index":409,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["private",{"_index":127,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["process.env.api_addr",{"_index":314,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":311,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["process.env.origin_addr",{"_index":313,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["process.env.secret",{"_index":318,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["process.env.smtp_pass",{"_index":316,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["process.env.smtp_user",{"_index":315,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":591,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["productel",{"_index":561,"title":{"interfaces/ProductEl.html":{}},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"coverage.html":{}}}],["productid",{"_index":379,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"classes/Products.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["production",{"_index":898,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":607,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["productname",{"_index":567,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/Products.html":{}}}],["productrepositoryinterface",{"_index":594,"title":{"interfaces/ProductRepositoryInterface.html":{}},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"coverage.html":{}}}],["products",{"_index":391,"title":{"classes/Products.html":{}},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["products.controller.js",{"_index":652,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.create",{"_index":592,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["products.destroy",{"_index":589,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["products.entity.js",{"_index":605,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["products.providers.js",{"_index":654,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.repository.js",{"_index":438,"title":{},"body":{"injectables/GetProductsUseCase.html":{},"modules/ProductsModule.html":{}}}],["products.service.js",{"_index":651,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/products.entity.js",{"_index":392,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"classes/User.html":{}}}],["productscontrollers",{"_index":635,"title":{"controllers/ProductsControllers.html":{}},"body":{"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":16,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsproviders",{"_index":653,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productsrepository",{"_index":432,"title":{"injectables/ProductsRepository.html":{}},"body":{"injectables/GetProductsUseCase.html":{},"interfaces/ProductRepositoryInterface.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"coverage.html":{},"overview.html":{}}}],["productsservices",{"_index":649,"title":{"injectables/ProductsServices.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsServices.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":876,"title":{},"body":{"index.html":{}}}],["project",{"_index":909,"title":{},"body":{"index.html":{}}}],["promise",{"_index":249,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"interfaces/SendEmailProps.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"guards/isLoggedIn.html":{}}}],["properties",{"_index":198,"title":{"properties.html":{}},"body":{"classes/ChangePasswdBody.html":{},"injectables/CommonServices.html":{},"interfaces/Env.html":{},"classes/Favorites.html":{},"classes/LoginBody.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"classes/Products.html":{},"classes/RegisterBody.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":988,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":355,"title":{},"body":{"interfaces/Env.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/favorite.providers.js",{"_index":780,"title":{},"body":{"modules/UserModule.html":{}}}],["providers/user.providers.js",{"_index":778,"title":{},"body":{"modules/UserModule.html":{}}}],["public",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["publish",{"_index":977,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1021,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1000,"title":{},"body":{"license.html":{}}}],["query",{"_index":118,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/ProductsControllers.html":{}}}],["query('setcookie",{"_index":156,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["rate",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["raw",{"_index":474,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["raw.includes",{"_index":477,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["raw['message",{"_index":480,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["rawisstring",{"_index":476,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["read",{"_index":918,"title":{},"body":{"index.html":{}}}],["reasonable",{"_index":992,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":575,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["record",{"_index":500,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["recovery",{"_index":359,"title":{},"body":{"interfaces/Env.html":{},"injectables/PasswdRecoveryUseCase.html":{},"miscellaneous/variables.html":{}}}],["recovery/:email",{"_index":99,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["recoveryemail",{"_index":358,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["recoverylink",{"_index":551,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["recoverytoken",{"_index":549,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["redirect(`${this.configservice.get('env.origin_addr')}/login",{"_index":133,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["reflect",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":75,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{}}}],["register(@body",{"_index":137,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["register(body",{"_index":103,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["register(data",{"_index":187,"title":{},"body":{"injectables/AuthServices.html":{}}}],["registerbody",{"_index":104,"title":{"classes/RegisterBody.html":{}},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"interfaces/IUserRepository.html":{},"classes/RegisterBody.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["registerusecase",{"_index":165,"title":{"injectables/RegisterUseCase.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"coverage.html":{},"overview.html":{}}}],["registerusercaseprops",{"_index":676,"title":{"interfaces/RegisterUserCaseProps.html":{}},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"coverage.html":{}}}],["repository",{"_index":887,"title":{},"body":{"index.html":{}}}],["req",{"_index":732,"title":{},"body":{"controllers/UserControllers.html":{},"guards/isLoggedIn.html":{}}}],["req.cookies",{"_index":753,"title":{},"body":{"controllers/UserControllers.html":{}}}],["req.cookies?.token",{"_index":941,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["req.params?.token",{"_index":940,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["request",{"_index":733,"title":{},"body":{"controllers/UserControllers.html":{},"dependencies.html":{}}}],["res",{"_index":79,"title":{},"body":{"controllers/AuthControllers.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UserControllers.html":{}}}],["res.clearcookie('token",{"_index":760,"title":{},"body":{"controllers/UserControllers.html":{}}}],["res.cookie('token",{"_index":146,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["res.sendstatus(200",{"_index":157,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["res.status(200).json",{"_index":148,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/UserControllers.html":{}}}],["res.status(status).json",{"_index":478,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":80,"title":{},"body":{"controllers/AuthControllers.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UserControllers.html":{}}}],["restrict",{"_index":501,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"license.html":{}}}],["restriction",{"_index":970,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1002,"title":{},"body":{"license.html":{}}}],["results",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"guards/isLoggedIn.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":139,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/CommonServices.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"interfaces/SendEmailProps.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":91,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/FavoriteRepository.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"injectables/RegisterUseCase.html":{},"injectables/RmUnverifiedUsers.html":{},"injectables/ToggleFavoriteUseCase.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{}}}],["rights",{"_index":973,"title":{},"body":{"license.html":{}}}],["rmunverifiedusers",{"_index":19,"title":{"injectables/RmUnverifiedUsers.html":{}},"body":{"modules/AppModule.html":{},"injectables/RmUnverifiedUsers.html":{},"coverage.html":{},"overview.html":{}}}],["rootpath",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":558,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"index.html":{}}}],["run\\n",{"_index":593,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["rxjs",{"_index":865,"title":{},"body":{"dependencies.html":{},"guards/isLoggedIn.html":{}}}],["salt",{"_index":225,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["samesite",{"_index":331,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":491,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["save(user",{"_index":505,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["scalable",{"_index":881,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":437,"title":{},"body":{"injectables/GetProductsUseCase.html":{},"interfaces/ProductRepositoryInterface.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{}}}],["search.tolowercase",{"_index":613,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["secret",{"_index":305,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":257,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/Env.html":{},"interfaces/SendEmailProps.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":981,"title":{},"body":{"license.html":{}}}],["semantics",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":361,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["sendemailprops",{"_index":247,"title":{"interfaces/SendEmailProps.html":{}},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{},"coverage.html":{}}}],["sendlink",{"_index":240,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["sendlink(undefined",{"_index":246,"title":{},"body":{"injectables/CommonServices.html":{}}}],["sequelize",{"_index":416,"title":{},"body":{"classes/Favorites.html":{},"interfaces/IUserRepository.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"injectables/ProductsRepository.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sequelize.addmodels([user",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelize.col('info",{"_index":614,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["sequelize.col('productname",{"_index":611,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["sequelize.sync",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelize.where(sequelize.fn('lower",{"_index":610,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["server",{"_index":336,"title":{},"body":{"interfaces/Env.html":{},"classes/HandleError.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servermsg",{"_index":333,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["serveroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticoptions",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["setcookie",{"_index":108,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["shall",{"_index":1024,"title":{},"body":{"license.html":{}}}],["side",{"_index":882,"title":{},"body":{"index.html":{}}}],["smtp.gmail.com",{"_index":254,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["smtp_pass",{"_index":306,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["smtp_user",{"_index":307,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":965,"title":{},"body":{"license.html":{}}}],["source",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthControllers.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"modules/CommonModule.html":{},"injectables/CommonServices.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"index.html":{},"guards/isLoggedIn.html":{}}}],["sponsors",{"_index":912,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["src/.../configuration.ts",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorite.providers.ts",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../products.providers.ts",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.providers.ts",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/configuration.ts",{"_index":300,"title":{},"body":{"interfaces/Env.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":279,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seed/populateproducts.service.ts",{"_index":555,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"coverage.html":{}}}],["src/database/seed/populateproducts.service.ts:17",{"_index":559,"title":{},"body":{"injectables/PopulateProductsService.html":{}}}],["src/database/seed/populateproducts.service.ts:23",{"_index":560,"title":{},"body":{"injectables/PopulateProductsService.html":{}}}],["src/database/seed/populateproducts.service.ts:52",{"_index":562,"title":{},"body":{"injectables/PopulateProductsService.html":{}}}],["src/database/seed/populateproducts.service.ts:61",{"_index":563,"title":{},"body":{"injectables/PopulateProductsService.html":{}}}],["src/filters/httpexception.filter.ts",{"_index":463,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/filters/httpexception.filter.ts:11",{"_index":467,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/guard/isloggedin.guard.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"guards/isLoggedIn.html":{}}}],["src/guard/isloggedin.guard.ts:13",{"_index":933,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["src/guard/isloggedin.guard.ts:19",{"_index":936,"title":{},"body":{"guards/isLoggedIn.html":{}}}],["src/jobs/rmunverifiedusers.service.ts",{"_index":687,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{},"coverage.html":{}}}],["src/jobs/rmunverifiedusers.service.ts:9",{"_index":691,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["src/main.ts",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":66,"title":{},"body":{"controllers/AuthControllers.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:30",{"_index":85,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["src/modules/auth/auth.controller.ts:42",{"_index":106,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["src/modules/auth/auth.controller.ts:52",{"_index":95,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["src/modules/auth/auth.controller.ts:63",{"_index":100,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["src/modules/auth/auth.controller.ts:74",{"_index":111,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":176,"title":{},"body":{"injectables/AuthServices.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:11",{"_index":179,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/modules/auth/auth.service.ts:25",{"_index":181,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/modules/auth/auth.service.ts:30",{"_index":188,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/modules/auth/auth.service.ts:34",{"_index":184,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/modules/auth/auth.service.ts:38",{"_index":186,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/modules/auth/dto/loginbody.dto.ts",{"_index":523,"title":{},"body":{"classes/LoginBody.html":{},"coverage.html":{}}}],["src/modules/auth/dto/loginbody.dto.ts:11",{"_index":527,"title":{},"body":{"classes/LoginBody.html":{}}}],["src/modules/auth/dto/loginbody.dto.ts:7",{"_index":526,"title":{},"body":{"classes/LoginBody.html":{}}}],["src/modules/auth/dto/registerbody.dto.ts",{"_index":666,"title":{},"body":{"classes/RegisterBody.html":{},"coverage.html":{}}}],["src/modules/auth/dto/registerbody.dto.ts:11",{"_index":668,"title":{},"body":{"classes/RegisterBody.html":{}}}],["src/modules/auth/dto/registerbody.dto.ts:15",{"_index":669,"title":{},"body":{"classes/RegisterBody.html":{}}}],["src/modules/auth/dto/registerbody.dto.ts:6",{"_index":672,"title":{},"body":{"classes/RegisterBody.html":{}}}],["src/modules/auth/usecases/emailverify.usecase.ts",{"_index":290,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{},"coverage.html":{}}}],["src/modules/auth/usecases/emailverify.usecase.ts:14",{"_index":292,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{}}}],["src/modules/auth/usecases/emailverify.usecase.ts:6",{"_index":291,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{}}}],["src/modules/auth/usecases/login.usecase.ts",{"_index":531,"title":{},"body":{"injectables/LoginUseCase.html":{},"coverage.html":{}}}],["src/modules/auth/usecases/login.usecase.ts:17",{"_index":534,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["src/modules/auth/usecases/login.usecase.ts:9",{"_index":532,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["src/modules/auth/usecases/passwdrecovery.usecase.ts",{"_index":545,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{},"coverage.html":{}}}],["src/modules/auth/usecases/passwdrecovery.usecase.ts:18",{"_index":547,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["src/modules/auth/usecases/passwdrecovery.usecase.ts:8",{"_index":546,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["src/modules/auth/usecases/register.usecase.ts",{"_index":674,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"coverage.html":{}}}],["src/modules/auth/usecases/register.usecase.ts:15",{"_index":675,"title":{},"body":{"injectables/RegisterUseCase.html":{}}}],["src/modules/auth/usecases/register.usecase.ts:25",{"_index":677,"title":{},"body":{"injectables/RegisterUseCase.html":{}}}],["src/modules/common/common.module.ts",{"_index":235,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/modules/common/common.service.ts",{"_index":237,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{},"coverage.html":{}}}],["src/modules/common/common.service.ts:13",{"_index":241,"title":{},"body":{"injectables/CommonServices.html":{}}}],["src/modules/common/common.service.ts:16",{"_index":244,"title":{},"body":{"injectables/CommonServices.html":{}}}],["src/modules/common/common.service.ts:24",{"_index":262,"title":{},"body":{"injectables/CommonServices.html":{}}}],["src/modules/common/common.service.ts:34",{"_index":248,"title":{},"body":{"injectables/CommonServices.html":{}}}],["src/modules/products/products.controller.ts",{"_index":636,"title":{},"body":{"controllers/ProductsControllers.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:13",{"_index":640,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["src/modules/products/products.entity.ts",{"_index":615,"title":{},"body":{"classes/Products.html":{},"coverage.html":{}}}],["src/modules/products/products.entity.ts:18",{"_index":621,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:24",{"_index":619,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:30",{"_index":626,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:36",{"_index":623,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:42",{"_index":622,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:48",{"_index":624,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:54",{"_index":625,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.entity.ts:62",{"_index":629,"title":{},"body":{"classes/Products.html":{}}}],["src/modules/products/products.module.ts",{"_index":650,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.providers.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/products/products.repository.ts",{"_index":595,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"coverage.html":{}}}],["src/modules/products/products.repository.ts:12",{"_index":656,"title":{},"body":{"injectables/ProductsRepository.html":{}}}],["src/modules/products/products.repository.ts:18",{"_index":657,"title":{},"body":{"injectables/ProductsRepository.html":{}}}],["src/modules/products/products.repository.ts:22",{"_index":658,"title":{},"body":{"injectables/ProductsRepository.html":{}}}],["src/modules/products/products.repository.ts:26",{"_index":659,"title":{},"body":{"injectables/ProductsRepository.html":{}}}],["src/modules/products/products.repository.ts:6",{"_index":599,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{}}}],["src/modules/products/products.repository.ts:7",{"_index":601,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{}}}],["src/modules/products/products.repository.ts:8",{"_index":603,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{}}}],["src/modules/products/products.service.ts",{"_index":660,"title":{},"body":{"injectables/ProductsServices.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:11",{"_index":664,"title":{},"body":{"injectables/ProductsServices.html":{}}}],["src/modules/products/products.service.ts:5",{"_index":662,"title":{},"body":{"injectables/ProductsServices.html":{}}}],["src/modules/products/usecases/getproducts.usecase.ts",{"_index":430,"title":{},"body":{"injectables/GetProductsUseCase.html":{},"coverage.html":{}}}],["src/modules/products/usecases/getproducts.usecase.ts:5",{"_index":433,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["src/modules/products/usecases/getproducts.usecase.ts:8",{"_index":436,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["src/modules/user/dto/changepasswdbody.dto.ts",{"_index":197,"title":{},"body":{"classes/ChangePasswdBody.html":{},"coverage.html":{}}}],["src/modules/user/dto/changepasswdbody.dto.ts:6",{"_index":202,"title":{},"body":{"classes/ChangePasswdBody.html":{}}}],["src/modules/user/dto/togglefavoritebody.dto.ts",{"_index":701,"title":{},"body":{"classes/ToggleFavoriteBody.html":{},"coverage.html":{}}}],["src/modules/user/dto/togglefavoritebody.dto.ts:5",{"_index":702,"title":{},"body":{"classes/ToggleFavoriteBody.html":{}}}],["src/modules/user/favorites/favorite.entity.ts",{"_index":406,"title":{},"body":{"classes/Favorites.html":{},"coverage.html":{}}}],["src/modules/user/favorites/favorite.entity.ts:15",{"_index":411,"title":{},"body":{"classes/Favorites.html":{}}}],["src/modules/user/favorites/favorite.entity.ts:19",{"_index":410,"title":{},"body":{"classes/Favorites.html":{}}}],["src/modules/user/favorites/favorite.repository.ts",{"_index":369,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"coverage.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:10",{"_index":485,"title":{},"body":{"interfaces/IFavoritesRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:14",{"_index":376,"title":{},"body":{"injectables/FavoriteRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:22",{"_index":387,"title":{},"body":{"injectables/FavoriteRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:28",{"_index":383,"title":{},"body":{"injectables/FavoriteRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:32",{"_index":380,"title":{},"body":{"injectables/FavoriteRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:36",{"_index":385,"title":{},"body":{"injectables/FavoriteRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:7",{"_index":486,"title":{},"body":{"interfaces/IFavoritesRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:8",{"_index":484,"title":{},"body":{"interfaces/IFavoritesRepository.html":{}}}],["src/modules/user/favorites/favorite.repository.ts:9",{"_index":483,"title":{},"body":{"interfaces/IFavoritesRepository.html":{}}}],["src/modules/user/providers/favorite.providers.ts",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/providers/user.providers.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/usecases/changepasswd.usecase.ts",{"_index":208,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"coverage.html":{}}}],["src/modules/user/usecases/changepasswd.usecase.ts:15",{"_index":215,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{}}}],["src/modules/user/usecases/changepasswd.usecase.ts:7",{"_index":212,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{}}}],["src/modules/user/usecases/deleteuser.usecase.ts",{"_index":283,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"coverage.html":{}}}],["src/modules/user/usecases/deleteuser.usecase.ts:14",{"_index":287,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["src/modules/user/usecases/deleteuser.usecase.ts:6",{"_index":284,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["src/modules/user/usecases/getfavorites.usecase.ts",{"_index":423,"title":{},"body":{"injectables/GetFavoritesUseCase.html":{},"coverage.html":{}}}],["src/modules/user/usecases/getfavorites.usecase.ts:5",{"_index":425,"title":{},"body":{"injectables/GetFavoritesUseCase.html":{}}}],["src/modules/user/usecases/getfavorites.usecase.ts:8",{"_index":426,"title":{},"body":{"injectables/GetFavoritesUseCase.html":{}}}],["src/modules/user/usecases/getuser.usecase.ts",{"_index":443,"title":{},"body":{"injectables/GetUserUseCase.html":{},"coverage.html":{}}}],["src/modules/user/usecases/getuser.usecase.ts:14",{"_index":445,"title":{},"body":{"injectables/GetUserUseCase.html":{}}}],["src/modules/user/usecases/getuser.usecase.ts:6",{"_index":444,"title":{},"body":{"injectables/GetUserUseCase.html":{}}}],["src/modules/user/usecases/togglefavorite.usecase.ts",{"_index":704,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{},"coverage.html":{}}}],["src/modules/user/usecases/togglefavorite.usecase.ts:11",{"_index":707,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{}}}],["src/modules/user/usecases/togglefavorite.usecase.ts:5",{"_index":705,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{}}}],["src/modules/user/user.controller.ts",{"_index":726,"title":{},"body":{"controllers/UserControllers.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:32",{"_index":743,"title":{},"body":{"controllers/UserControllers.html":{}}}],["src/modules/user/user.controller.ts:43",{"_index":735,"title":{},"body":{"controllers/UserControllers.html":{}}}],["src/modules/user/user.controller.ts:57",{"_index":738,"title":{},"body":{"controllers/UserControllers.html":{}}}],["src/modules/user/user.controller.ts:71",{"_index":746,"title":{},"body":{"controllers/UserControllers.html":{}}}],["src/modules/user/user.controller.ts:82",{"_index":741,"title":{},"body":{"controllers/UserControllers.html":{}}}],["src/modules/user/user.entity.ts",{"_index":712,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:18",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:24",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:30",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:37",{"_index":719,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:43",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.entity.ts:52",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/modules/user/user.module.ts",{"_index":770,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.repository.ts",{"_index":488,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/modules/user/user.repository.ts:13",{"_index":503,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["src/modules/user/user.repository.ts:17",{"_index":497,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["src/modules/user/user.repository.ts:18",{"_index":508,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["src/modules/user/user.repository.ts:19",{"_index":506,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["src/modules/user/user.repository.ts:20",{"_index":494,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["src/modules/user/user.repository.ts:24",{"_index":782,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/user/user.repository.ts:30",{"_index":785,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/user/user.repository.ts:47",{"_index":784,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/user/user.repository.ts:55",{"_index":787,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/user/user.repository.ts:64",{"_index":786,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/user/user.repository.ts:68",{"_index":783,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/user/user.service.ts",{"_index":788,"title":{},"body":{"classes/UserServices.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:25",{"_index":797,"title":{},"body":{"classes/UserServices.html":{}}}],["src/modules/user/user.service.ts:30",{"_index":791,"title":{},"body":{"classes/UserServices.html":{}}}],["src/modules/user/user.service.ts:35",{"_index":793,"title":{},"body":{"classes/UserServices.html":{}}}],["src/modules/user/user.service.ts:40",{"_index":799,"title":{},"body":{"classes/UserServices.html":{}}}],["src/modules/user/user.service.ts:45",{"_index":795,"title":{},"body":{"classes/UserServices.html":{}}}],["src/modules/user/user.service.ts:9",{"_index":789,"title":{},"body":{"classes/UserServices.html":{}}}],["src/utils/handleerror.ts",{"_index":446,"title":{},"body":{"classes/HandleError.html":{},"coverage.html":{}}}],["src/utils/handleerror.ts:4",{"_index":449,"title":{},"body":{"classes/HandleError.html":{}}}],["start",{"_index":894,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":897,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":899,"title":{},"body":{"index.html":{}}}],["started",{"_index":875,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":886,"title":{},"body":{"index.html":{}}}],["statements",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/HandleError.html":{},"dependencies.html":{}}}],["status",{"_index":223,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["status(200",{"_index":132,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["stay",{"_index":921,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":277,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{},"properties.html":{}}}],["string",{"_index":78,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/GetProductsUseCase.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{}}}],["subject",{"_index":268,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"license.html":{}}}],["sublicense",{"_index":979,"title":{},"body":{"license.html":{}}}],["successful",{"_index":348,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":360,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["suggests",{"_index":995,"title":{},"body":{"license.html":{}}}],["support",{"_index":913,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1040,"title":{},"body":{"modules.html":{}}}],["table",{"_index":415,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablename",{"_index":418,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":498,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["target.destroy",{"_index":518,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["technological",{"_index":1006,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1005,"title":{},"body":{"license.html":{}}}],["test",{"_index":902,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":905,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":904,"title":{},"body":{"index.html":{}}}],["tests",{"_index":901,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":911,"title":{},"body":{"index.html":{}}}],["this.authservices.emailverify(token",{"_index":131,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.authservices.login(body",{"_index":145,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.authservices.passwdrecovery(email",{"_index":151,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.authservices.register(body",{"_index":138,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.changepasswdusecase.execute(email",{"_index":802,"title":{},"body":{"classes/UserServices.html":{}}}],["this.commonservices.extractjwtpayload(emailtoken",{"_index":190,"title":{},"body":{"injectables/AuthServices.html":{}}}],["this.commonservices.extractjwtpayload(token",{"_index":800,"title":{},"body":{"classes/UserServices.html":{}}}],["this.commonservices.sendlink",{"_index":554,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["this.configservice.get('authmsg.emailexists",{"_index":678,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["this.configservice.get('authmsg.incorrect",{"_index":539,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["this.configservice.get('authmsg.noverifiedemail",{"_index":535,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["this.configservice.get('authmsg.ok",{"_index":149,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.configservice.get('authmsg.recoveryemail",{"_index":152,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.configservice.get('cookie",{"_index":147,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.configservice.get('env.api_addr')}/auth/email",{"_index":684,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["this.configservice.get('env.api_addr')}/public/product.webp",{"_index":579,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["this.configservice.get('env.auth_duration_days",{"_index":543,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["this.configservice.get('env.origin_addr')}/passwd",{"_index":552,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["this.configservice.get('env.secret",{"_index":273,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"guards/isLoggedIn.html":{}}}],["this.configservice.get('env.smtp_pass",{"_index":261,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["this.configservice.get('env.smtp_user",{"_index":259,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["this.configservice.get('servermsg.invalidtoken",{"_index":294,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{}}}],["this.configservice.get('usermsg.created",{"_index":141,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["this.configservice.get('usermsg.deleted",{"_index":761,"title":{},"body":{"controllers/UserControllers.html":{}}}],["this.configservice.get('usermsg.notfound",{"_index":220,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{}}}],["this.configservice.get('usermsg.updated",{"_index":757,"title":{},"body":{"controllers/UserControllers.html":{}}}],["this.deleteuserusecase.execute(id",{"_index":803,"title":{},"body":{"classes/UserServices.html":{}}}],["this.emailverifyusecase.execute(email",{"_index":191,"title":{},"body":{"injectables/AuthServices.html":{}}}],["this.env.api_addr",{"_index":321,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["this.env.auth_duration_days",{"_index":327,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["this.env.origin_addr",{"_index":320,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["this.favoritemodel.create",{"_index":400,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["this.favoritemodel.destroy",{"_index":399,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["this.favoritemodel.findone",{"_index":398,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{}}}],["this.favoriterepository.createfavorite(userid",{"_index":711,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{}}}],["this.favoriterepository.deletefavorite(userid",{"_index":710,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{}}}],["this.favoriterepository.getfavorites(id",{"_index":428,"title":{},"body":{"injectables/GetFavoritesUseCase.html":{}}}],["this.favoriterepository.getonefavorite",{"_index":709,"title":{},"body":{"injectables/ToggleFavoriteUseCase.html":{}}}],["this.generateproducts",{"_index":572,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["this.getfavoritesusecase.execute(id",{"_index":805,"title":{},"body":{"classes/UserServices.html":{}}}],["this.getproductsusecase.execute",{"_index":645,"title":{},"body":{"controllers/ProductsControllers.html":{}}}],["this.getproductsusecase.execute(search",{"_index":665,"title":{},"body":{"injectables/ProductsServices.html":{}}}],["this.getuserusecase.execute(id",{"_index":801,"title":{},"body":{"classes/UserServices.html":{}}}],["this.loginusecase.execute(data",{"_index":193,"title":{},"body":{"injectables/AuthServices.html":{}}}],["this.passwdrecoveryusecase.execute(email",{"_index":194,"title":{},"body":{"injectables/AuthServices.html":{}}}],["this.productmodel.findall",{"_index":608,"title":{},"body":{"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{}}}],["this.products",{"_index":571,"title":{},"body":{"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{}}}],["this.productsrepository.getallproducts",{"_index":441,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["this.productsrepository.getbycategory(category",{"_index":439,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["this.productsrepository.getbygenericsearch(search",{"_index":440,"title":{},"body":{"injectables/GetProductsUseCase.html":{}}}],["this.registerusecase.execute(data",{"_index":192,"title":{},"body":{"injectables/AuthServices.html":{}}}],["this.save(user",{"_index":520,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["this.togglefavoriteusecase.execute(userid",{"_index":804,"title":{},"body":{"classes/UserServices.html":{}}}],["this.transporter.sendmail",{"_index":275,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["this.usermodel.create(userattributes",{"_index":522,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["this.usermodel.destroy",{"_index":517,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":401,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["this.userrepository.create",{"_index":682,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["this.userrepository.delete(user",{"_index":289,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["this.userrepository.findbyfield",{"_index":219,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["this.userrepository.save(user",{"_index":297,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{}}}],["this.userrepository.updatefield",{"_index":229,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{}}}],["this.userservices.changepasswd(token",{"_index":756,"title":{},"body":{"controllers/UserControllers.html":{}}}],["this.userservices.deleteuser(token",{"_index":759,"title":{},"body":{"controllers/UserControllers.html":{}}}],["this.userservices.getfavorites(token",{"_index":765,"title":{},"body":{"controllers/UserControllers.html":{}}}],["this.userservices.getuser(token",{"_index":754,"title":{},"body":{"controllers/UserControllers.html":{}}}],["this.userservices.togglefavorite(token",{"_index":763,"title":{},"body":{"controllers/UserControllers.html":{}}}],["through",{"_index":628,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["throw",{"_index":221,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"guards/isLoggedIn.html":{}}}],["timestamps",{"_index":419,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{}}}],["togglefavorite",{"_index":730,"title":{},"body":{"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["togglefavorite(@body",{"_index":762,"title":{},"body":{"controllers/UserControllers.html":{}}}],["togglefavorite(body",{"_index":744,"title":{},"body":{"controllers/UserControllers.html":{}}}],["togglefavorite(token",{"_index":798,"title":{},"body":{"classes/UserServices.html":{}}}],["togglefavoritebody",{"_index":700,"title":{"classes/ToggleFavoriteBody.html":{}},"body":{"classes/ToggleFavoriteBody.html":{},"controllers/UserControllers.html":{},"coverage.html":{}}}],["togglefavoriteusecase",{"_index":703,"title":{"injectables/ToggleFavoriteUseCase.html":{}},"body":{"injectables/ToggleFavoriteUseCase.html":{},"modules/UserModule.html":{},"classes/UserServices.html":{},"coverage.html":{},"overview.html":{}}}],["token",{"_index":90,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/CommonServices.html":{},"interfaces/Env.html":{},"injectables/LoginUseCase.html":{},"interfaces/SendEmailProps.html":{},"controllers/UserControllers.html":{},"classes/UserServices.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["tokenvalidator",{"_index":76,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["tokenvalidator(token",{"_index":107,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["tort",{"_index":1034,"title":{},"body":{"license.html":{}}}],["touch",{"_index":922,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":238,"title":{},"body":{"injectables/CommonServices.html":{},"interfaces/SendEmailProps.html":{}}}],["true",{"_index":258,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"classes/Favorites.html":{},"injectables/GetUserUseCase.html":{},"classes/Products.html":{},"interfaces/SendEmailProps.html":{},"classes/User.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":129,"title":{},"body":{"controllers/AuthControllers.html":{},"interfaces/Env.html":{},"classes/HandleError.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"controllers/ProductsControllers.html":{},"injectables/RmUnverifiedUsers.html":{},"controllers/UserControllers.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":928,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"classes/ChangePasswdBody.html":{},"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginBody.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/PopulateProductsService.html":{},"interfaces/ProductEl.html":{},"interfaces/ProductRepositoryInterface.html":{},"classes/Products.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsRepository.html":{},"injectables/ProductsServices.html":{},"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/SendEmailProps.html":{},"classes/ToggleFavoriteBody.html":{},"injectables/ToggleFavoriteUseCase.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"classes/UserServices.html":{},"coverage.html":{},"guards/isLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":396,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/ProductRepositoryInterface.html":{},"injectables/ProductsRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["types",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":417,"title":{},"body":{"classes/Favorites.html":{},"classes/Products.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["uname",{"_index":667,"title":{},"body":{"classes/RegisterBody.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"classes/User.html":{}}}],["undefined",{"_index":408,"title":{},"body":{"classes/Favorites.html":{},"interfaces/IUserRepository.html":{},"classes/Products.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["unit",{"_index":900,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":102,"title":{},"body":{"controllers/AuthControllers.html":{},"injectables/AuthServices.html":{},"injectables/GetFavoritesUseCase.html":{},"injectables/GetProductsUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/LoginUseCase.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsServices.html":{},"controllers/UserControllers.html":{},"classes/UserServices.html":{}}}],["updated",{"_index":367,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":721,"title":{},"body":{"classes/User.html":{}}}],["updatefield",{"_index":492,"title":{"interfaces/UpdateField.html":{}},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["updatefield(undefined",{"_index":507,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["use",{"_index":974,"title":{},"body":{"license.html":{}}}],["usecases/changepasswd.usecase.js",{"_index":776,"title":{},"body":{"modules/UserModule.html":{},"classes/UserServices.html":{}}}],["usecases/deleteuser.usecase.js",{"_index":773,"title":{},"body":{"modules/UserModule.html":{},"classes/UserServices.html":{}}}],["usecases/emailverify.usecase.js",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{}}}],["usecases/getfavorites.usecase.js",{"_index":775,"title":{},"body":{"modules/UserModule.html":{},"classes/UserServices.html":{}}}],["usecases/getproducts.usecase.js",{"_index":641,"title":{},"body":{"controllers/ProductsControllers.html":{},"modules/ProductsModule.html":{},"injectables/ProductsServices.html":{}}}],["usecases/getuser.usecase.js",{"_index":772,"title":{},"body":{"modules/UserModule.html":{},"classes/UserServices.html":{}}}],["usecases/login.usecase.js",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{}}}],["usecases/passwdrecovery.usecase.js",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{}}}],["usecases/register.usecase.js",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{}}}],["usecases/togglefavorite.usecase.js",{"_index":774,"title":{},"body":{"modules/UserModule.html":{},"classes/UserServices.html":{}}}],["usefactory",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":119,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/UserControllers.html":{}}}],["useguards(isloggedin",{"_index":154,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/UserControllers.html":{}}}],["user",{"_index":218,"title":{"classes/User.html":{}},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/CommonServices.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"interfaces/Env.html":{},"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"classes/Products.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/SendEmailProps.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"controllers/UserControllers.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller.js",{"_index":771,"title":{},"body":{"modules/UserModule.html":{}}}],["user.destroy",{"_index":697,"title":{},"body":{"injectables/RmUnverifiedUsers.html":{}}}],["user.entity.js",{"_index":390,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["user.id",{"_index":541,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["user.passwd",{"_index":538,"title":{},"body":{"injectables/LoginUseCase.html":{}}}],["user.repository.js",{"_index":216,"title":{},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"modules/UserModule.html":{}}}],["user.save",{"_index":521,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["user.service.js",{"_index":749,"title":{},"body":{"controllers/UserControllers.html":{},"modules/UserModule.html":{}}}],["user.verified_email",{"_index":296,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{},"injectables/LoginUseCase.html":{}}}],["user/favorites/favorite.entity.js",{"_index":632,"title":{},"body":{"classes/Products.html":{}}}],["user/user.entity.js",{"_index":631,"title":{},"body":{"classes/Products.html":{}}}],["user/user.module.js",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.repository.js",{"_index":293,"title":{},"body":{"injectables/EmailVerifyUseCase.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["user[fieldname",{"_index":519,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["userattributes",{"_index":495,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["usercontrollers",{"_index":725,"title":{"controllers/UserControllers.html":{}},"body":{"controllers/UserControllers.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userexists",{"_index":548,"title":{},"body":{"injectables/PasswdRecoveryUseCase.html":{}}}],["userid",{"_index":381,"title":{},"body":{"injectables/FavoriteRepository.html":{},"classes/Favorites.html":{},"interfaces/IFavoritesRepository.html":{},"injectables/ToggleFavoriteUseCase.html":{},"classes/User.html":{},"classes/UserServices.html":{}}}],["usermodel",{"_index":375,"title":{},"body":{"injectables/FavoriteRepository.html":{},"interfaces/IFavoritesRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/UpdateField.html":{},"injectables/UserRepository.html":{}}}],["usermodule",{"_index":17,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usermsg",{"_index":362,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["userproviders",{"_index":777,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":211,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/ChangePasswdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/EmailVerifyUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/IUserRepository.html":{},"injectables/LoginUseCase.html":{},"injectables/PasswdRecoveryUseCase.html":{},"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{},"interfaces/UpdateField.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":616,"title":{},"body":{"classes/Products.html":{},"classes/User.html":{}}}],["userservices",{"_index":748,"title":{"classes/UserServices.html":{}},"body":{"controllers/UserControllers.html":{},"modules/UserModule.html":{},"classes/UserServices.html":{},"coverage.html":{}}}],["usevalue",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/handleerror.js",{"_index":114,"title":{},"body":{"controllers/AuthControllers.html":{},"controllers/ProductsControllers.html":{},"controllers/UserControllers.html":{}}}],["validator",{"_index":205,"title":{},"body":{"classes/ChangePasswdBody.html":{},"classes/LoginBody.html":{},"classes/RegisterBody.html":{},"classes/ToggleFavoriteBody.html":{},"dependencies.html":{}}}],["validator/:token",{"_index":153,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["validator/:token')@useguards(isloggedin",{"_index":110,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["value",{"_index":251,"title":{},"body":{"injectables/CommonServices.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1055,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":686,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["verified",{"_index":357,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["verified_email",{"_index":515,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/RmUnverifiedUsers.html":{},"interfaces/UpdateField.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["verify/${emailtoken",{"_index":685,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["verify/:token",{"_index":83,"title":{},"body":{"controllers/AuthControllers.html":{}}}],["verifylink",{"_index":683,"title":{},"body":{"injectables/RegisterUseCase.html":{},"interfaces/RegisterUserCaseProps.html":{}}}],["version",{"_index":1050,"title":{},"body":{"properties.html":{}}}],["void",{"_index":450,"title":{},"body":{"classes/HandleError.html":{},"classes/HttpExceptionFilter.html":{}}}],["warranties",{"_index":1017,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1013,"title":{},"body":{"license.html":{}}}],["watch",{"_index":895,"title":{},"body":{"index.html":{}}}],["way",{"_index":994,"title":{},"body":{"license.html":{}}}],["website",{"_index":926,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":335,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1031,"title":{},"body":{"license.html":{}}}],["without",{"_index":969,"title":{},"body":{"license.html":{}}}],["yes",{"_index":245,"title":{},"body":{"injectables/CommonServices.html":{},"injectables/GetProductsUseCase.html":{},"interfaces/IUserRepository.html":{},"controllers/ProductsControllers.html":{},"injectables/ProductsServices.html":{},"injectables/UserRepository.html":{}}}],["you'd",{"_index":916,"title":{},"body":{"index.html":{}}}],["zacca",{"_index":956,"title":{},"body":{"license.html":{},"properties.html":{}}}],["zoom",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nPopulateProductsService \n\nPopulateProductsService \n\nPopulateProductsService  -->\n\nAppModule->PopulateProductsService \n\n\n\n\n\nPopulateProductsService\n\nPopulateProductsService\n\nAppModule -->\n\nPopulateProductsService->AppModule\n\n\n\n\n\nRmUnverifiedUsers\n\nRmUnverifiedUsers\n\nAppModule -->\n\nRmUnverifiedUsers->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PopulateProductsService\n                        \n                        \n                            RmUnverifiedUsers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PopulateProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ServeStaticModule } from '@nestjs/serve-static'\nimport { ConfigModule } from '@nestjs/config'\nimport { DatabaseModule } from './database/database.module.js'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { RmUnverifiedUsers } from './jobs/rmUnverifiedUsers.service.js'\nimport { UserModule } from './modules/user/user.module.js'\nimport { AuthModule } from './modules/auth/auth.module.js'\nimport { ProductsModule } from './modules/products/products.module.js'\nimport { configuration } from './config/configuration.js'\nimport { isLoggedIn } from './guard/isLoggedIn.guard.js'\nimport { PopulateProductsService } from './database/seed/populateProducts.service.js'\n\n@Module({\n  imports: [\n    UserModule,\n    AuthModule,\n    ProductsModule,\n    DatabaseModule,\n    ScheduleModule.forRoot(),\n    ServeStaticModule.forRoot({\n      rootPath: 'public',\n      serveRoot: '/public',\n      serveStaticOptions: {\n        maxAge: '1d',\n        etag: false,\n      },\n    }),\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  providers: [RmUnverifiedUsers, isLoggedIn, PopulateProductsService],\n  exports: [PopulateProductsService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthControllers.html":{"url":"controllers/AuthControllers.html","title":"controller - AuthControllers","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthControllers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                emailVerify\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                passwdRecovery\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    Async\n                                tokenValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        emailVerify\n                        \n                    \n                \n            \n            \n                \n                        \n                    emailVerify(token: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/email-verify/:token')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: LoginBody, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LoginBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        passwdRecovery\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwdRecovery(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/passwd-recovery/:email')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(body: RegisterBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RegisterBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        tokenValidator\n                        \n                    \n                \n            \n            \n                \n                        \n                    tokenValidator(token: string, setCookie: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/token-validator/:token')@UseGuards(isLoggedIn)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setCookie\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { RegisterBody } from './dto/registerBody.dto.js'\nimport { HandleError } from '../../utils/handleError.js'\nimport {\n  Body,\n  Controller,\n  Get,\n  Inject,\n  Param,\n  Post,\n  Query,\n  Res,\n  UseGuards,\n} from '@nestjs/common'\nimport { LoginBody } from './dto/loginBody.dto.js'\nimport { Response } from 'express'\nimport { isLoggedIn } from '../../guard/isLoggedIn.guard.js'\nimport { AuthServices } from './auth.service.js'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('/auth')\nexport class AuthControllers {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private authServices: AuthServices,\n  ) {}\n\n  @Get('/email-verify/:token')\n  async emailVerify(@Param('token') token: string, @Res() res: Response) {\n    try {\n      await this.authServices.emailVerify(token)\n      res\n        .status(200)\n        .redirect(`${this.configService.get('env.ORIGIN_ADDR')}/login`)\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Post('/register')\n  async register(@Body() body: RegisterBody) {\n    try {\n      await this.authServices.register(body)\n      return { msg: this.configService.get('userMsg.created') }\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Post('/login')\n  async login(@Body() body: LoginBody, @Res() res: Response) {\n    try {\n      const authToken = await this.authServices.login(body)\n      res.cookie('token', authToken, this.configService.get('cookie'))\n      res.status(200).json({ msg: this.configService.get('authMsg.ok') })\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Get('/passwd-recovery/:email')\n  async passwdRecovery(@Param('email') email: string) {\n    try {\n      await this.authServices.passwdRecovery(email)\n      return { msg: this.configService.get('authMsg.recoveryEmail') }\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Get('/token-validator/:token')\n  @UseGuards(isLoggedIn)\n  async tokenValidator(\n    @Param('token') token: string,\n    @Query('setCookie') setCookie: string,\n    @Res() res: Response,\n  ) {\n    if (setCookie) {\n      res.cookie('token', token, this.configService.get('cookie'))\n    }\n    res.sendStatus(200)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthServices\n\nAuthServices\n\nAuthModule -->\n\nAuthServices->AuthModule\n\n\n\n\n\nEmailVerifyUseCase\n\nEmailVerifyUseCase\n\nAuthModule -->\n\nEmailVerifyUseCase->AuthModule\n\n\n\n\n\nLoginUseCase\n\nLoginUseCase\n\nAuthModule -->\n\nLoginUseCase->AuthModule\n\n\n\n\n\nPasswdRecoveryUseCase\n\nPasswdRecoveryUseCase\n\nAuthModule -->\n\nPasswdRecoveryUseCase->AuthModule\n\n\n\n\n\nRegisterUseCase\n\nRegisterUseCase\n\nAuthModule -->\n\nRegisterUseCase->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthServices\n                        \n                        \n                            EmailVerifyUseCase\n                        \n                        \n                            LoginUseCase\n                        \n                        \n                            PasswdRecoveryUseCase\n                        \n                        \n                            RegisterUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthControllers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthControllers } from './auth.controller.js'\nimport { AuthServices } from './auth.service.js'\nimport { EmailVerifyUseCase } from './usecases/emailVerify.usecase.js'\nimport { LoginUseCase } from './usecases/login.usecase.js'\nimport { PasswdRecoveryUseCase } from './usecases/passwdRecovery.usecase.js'\nimport { RegisterUseCase } from './usecases/register.usecase.js'\nimport { UserModule } from '../user/user.module.js'\nimport { CommonModule } from '../common/common.module.js'\nimport { ConfigModule } from '@nestjs/config'\n\n@Module({\n  imports: [UserModule, CommonModule, ConfigModule],\n  controllers: [AuthControllers],\n  providers: [\n    AuthServices,\n    EmailVerifyUseCase,\n    LoginUseCase,\n    PasswdRecoveryUseCase,\n    RegisterUseCase,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthServices.html":{"url":"injectables/AuthServices.html","title":"injectable - AuthServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emailVerify\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                passwdRecovery\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonServices: CommonServices, emailVerifyUseCase: EmailVerifyUseCase, registerUseCase: RegisterUseCase, loginUseCase: LoginUseCase, passwdRecoveryUseCase: PasswdRecoveryUseCase)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonServices\n                                                  \n                                                        \n                                                                        CommonServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailVerifyUseCase\n                                                  \n                                                        \n                                                                        EmailVerifyUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registerUseCase\n                                                  \n                                                        \n                                                                        RegisterUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginUseCase\n                                                  \n                                                        \n                                                                        LoginUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwdRecoveryUseCase\n                                                  \n                                                        \n                                                                        PasswdRecoveryUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emailVerify\n                        \n                    \n                \n            \n            \n                \n                        \n                    emailVerify(emailToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginBody)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        passwdRecovery\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwdRecovery(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterBody)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommonServices } from '../common/common.service.js'\nimport { LoginBody } from './dto/loginBody.dto.js'\nimport { RegisterBody } from './dto/registerBody.dto.js'\nimport { EmailVerifyUseCase } from './usecases/emailVerify.usecase.js'\nimport { LoginUseCase } from './usecases/login.usecase.js'\nimport { PasswdRecoveryUseCase } from './usecases/passwdRecovery.usecase.js'\nimport { RegisterUseCase } from './usecases/register.usecase.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AuthServices {\n  constructor(\n    @Inject()\n    private commonServices: CommonServices,\n    @Inject()\n    private emailVerifyUseCase: EmailVerifyUseCase,\n    @Inject()\n    private registerUseCase: RegisterUseCase,\n    @Inject()\n    private loginUseCase: LoginUseCase,\n    @Inject()\n    private passwdRecoveryUseCase: PasswdRecoveryUseCase,\n  ) {}\n\n  async emailVerify(emailToken: string) {\n    const email = this.commonServices.extractJwtPayload(emailToken, 'email')\n    return this.emailVerifyUseCase.execute(email)\n  }\n\n  async register(data: RegisterBody) {\n    return this.registerUseCase.execute(data)\n  }\n\n  async login(data: LoginBody) {\n    return this.loginUseCase.execute(data)\n  }\n\n  async passwdRecovery(email: string) {\n    return this.passwdRecoveryUseCase.execute(email)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswdBody.html":{"url":"classes/ChangePasswdBody.html","title":"class - ChangePasswdBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswdBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/changePasswdBody.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                passwd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        passwd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(6, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/changePasswdBody.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, Length } from 'class-validator'\n\nexport class ChangePasswdBody {\n  @IsNotEmpty()\n  @Length(6, 16)\n  passwd: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChangePasswdUseCase.html":{"url":"injectables/ChangePasswdUseCase.html","title":"injectable - ChangePasswdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChangePasswdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/usecases/changePasswd.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/usecases/changePasswd.usecase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(email: string, newPasswd: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/usecases/changePasswd.usecase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPasswd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config'\nimport { UserRepository } from '../user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\nimport * as bcrypt from 'bcrypt'\n\n@Injectable()\nexport class ChangePasswdUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n  ) {}\n\n  async execute(email: string, newPasswd: string) {\n    const user = await this.userRepository.findByField({ email })\n\n    if (!user) {\n      const msg = this.configService.get('userMsg.notFound')\n      throw { custom: { status: 404, msg } }\n    }\n\n    const salt = await bcrypt.genSalt(10)\n    const hashedNewPasswd = await bcrypt.hash(newPasswd, salt)\n\n    await this.userRepository.updateField({\n      user,\n      fieldName: 'passwd',\n      fieldValue: hashedNewPasswd,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nCommonServices \n\nCommonServices \n\n\n\nCommonModule\n\nCommonModule\n\nCommonServices  -->\n\nCommonModule->CommonServices \n\n\n\n\n\nCommonServices\n\nCommonServices\n\nCommonModule -->\n\nCommonServices->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonServices\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonServices\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { CommonServices } from './common.service.js'\nimport { ConfigModule } from '@nestjs/config'\n\n@Module({\n  imports: [ConfigModule],\n  providers: [CommonServices],\n  exports: [CommonServices],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonServices.html":{"url":"injectables/CommonServices.html","title":"injectable - CommonServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractJwtPayload\n                            \n                            \n                                    Async\n                                sendLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/common/common.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractJwtPayload\n                        \n                    \n                \n            \n            \n                \nextractJwtPayload(token: string, payloadName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/common/common.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payloadName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendLink(undefined: SendEmailProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/common/common.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            SendEmailProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : nodemailer.createTransport({\n    host: 'smtp.gmail.com',\n    port: 465,\n    secure: true,\n    auth: {\n      user: this.configService.get('env.SMTP_USER'),\n      pass: this.configService.get('env.SMTP_PASS'),\n    },\n  })\n                    \n                \n                    \n                        \n                                Defined in src/modules/common/common.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport jwt, { JwtPayload } from 'jsonwebtoken'\nimport * as nodemailer from 'nodemailer'\n\ninterface SendEmailProps {\n  to: string\n  subject: string\n  link: string\n}\n\n@Injectable()\nexport class CommonServices {\n  constructor(@Inject() private configService: ConfigService) {}\n\n  extractJwtPayload(token: string, payloadName?: string) {\n    const payload = jwt.verify(\n      token,\n      this.configService.get('env.SECRET'),\n    ) as JwtPayload\n    return payloadName && payload[payloadName]\n  }\n\n  private transporter = nodemailer.createTransport({\n    host: 'smtp.gmail.com',\n    port: 465,\n    secure: true,\n    auth: {\n      user: this.configService.get('env.SMTP_USER'),\n      pass: this.configService.get('env.SMTP_PASS'),\n    },\n  })\n\n  async sendLink({ to, subject, link }: SendEmailProps): Promise {\n    await this.transporter.sendMail({\n      from: 'Develop Store',\n      to,\n      subject,\n      html: `${link}`,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { databaseProviders } from './database.providers.js'\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserUseCase.html":{"url":"injectables/DeleteUserUseCase.html","title":"injectable - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/usecases/deleteUser.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/usecases/deleteUser.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/usecases/deleteUser.usecase.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config'\nimport { UserRepository } from '../user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class DeleteUserUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: number) {\n    const user = await this.userRepository.findByField({ id })\n\n    if (!user) {\n      const msg = this.configService.get('userMsg.notFound')\n      throw { custom: { status: 404, msg } }\n    }\n\n    await this.userRepository.delete(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailVerifyUseCase.html":{"url":"injectables/EmailVerifyUseCase.html","title":"injectable - EmailVerifyUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailVerifyUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/usecases/emailVerify.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/usecases/emailVerify.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/usecases/emailVerify.usecase.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config'\nimport { UserRepository } from '../../user/user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class EmailVerifyUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n  ) {}\n\n  async execute(email: string) {\n    const user = await this.userRepository.findByField({ email })\n\n    if (!user) {\n      const msg = this.configService.get('serverMsg.invalidToken')\n      throw { custom: { status: 400, msg } }\n    }\n\n    if (user.verified_email) {\n      return\n    }\n\n    user.verified_email = true\n    await this.userRepository.save(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            API_ADDR\n                                        \n                                \n                                \n                                        \n                                            AUTH_DURATION_DAYS\n                                        \n                                \n                                \n                                        \n                                            NODE_ENV\n                                        \n                                \n                                \n                                        \n                                            ORIGIN_ADDR\n                                        \n                                \n                                \n                                        \n                                            PORT\n                                        \n                                \n                                \n                                        \n                                            SECRET\n                                        \n                                \n                                \n                                        \n                                            SMTP_PASS\n                                        \n                                \n                                \n                                        \n                                            SMTP_USER\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        API_ADDR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        API_ADDR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AUTH_DURATION_DAYS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AUTH_DURATION_DAYS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_ENV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_ENV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ORIGIN_ADDR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ORIGIN_ADDR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SECRET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SECRET:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SMTP_PASS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SMTP_PASS:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SMTP_USER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SMTP_USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CorsOptions } from 'cors'\nimport { CookieOptions } from 'express'\n\ninterface Env {\n  NODE_ENV: string\n  PORT: number\n  ORIGIN_ADDR: string\n  API_ADDR: string\n  SMTP_USER: string\n  SMTP_PASS: string\n  AUTH_DURATION_DAYS: number\n  SECRET: string\n}\n\nexport const configuration = () => ({\n  get env() {\n    return {\n      NODE_ENV: process.env.NODE_ENV,\n      PORT: Number(process.env.PORT),\n      ORIGIN_ADDR: process.env.ORIGIN_ADDR,\n      API_ADDR: process.env.API_ADDR,\n      SMTP_USER: process.env.SMTP_USER,\n      SMTP_PASS: process.env.SMTP_PASS,\n      AUTH_DURATION_DAYS: Number(process.env.AUTH_DURATION_DAYS),\n      SECRET: process.env.SECRET,\n    } as Env\n  },\n\n  get cors() {\n    return {\n      origin: [this.env.ORIGIN_ADDR, this.env.API_ADDR],\n      methods: ['GET', 'POST', 'PATCH', 'DELETE'],\n      credentials: true,\n    } as CorsOptions\n  },\n\n  get cookie() {\n    return {\n      httpOnly: true,\n      secure: true,\n      maxAge: this.env.AUTH_DURATION_DAYS * 24 * 60 * 60 * 1000,\n      sameSite: 'none',\n    } as CookieOptions\n  },\n\n  get serverMsg() {\n    return {\n      great: 'Welcome!',\n      err: 'A server occurred error. Please try later.',\n      denied: 'Access denied.',\n      invalidToken: 'Invalid token.',\n    }\n  },\n\n  get authMsg() {\n    return {\n      ok: 'Authentication successful.',\n      incorrect: 'Incorrect password.',\n      emailExists: 'This email already exists.',\n      noEmailToken: 'No email token provided.',\n      noVerifiedEmail: 'No email verified.',\n      recoveryEmail: 'Recovery email successfully send.',\n    }\n  },\n\n  get userMsg() {\n    return {\n      notFound: 'User not found.',\n      created: 'User created successfully.',\n      deleted: 'User deleted successfully.',\n      updated: 'User updated successfully.',\n    }\n  },\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoriteRepository.html":{"url":"injectables/FavoriteRepository.html","title":"injectable - FavoriteRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FavoriteRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/favorites/favorite.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFavorite\n                            \n                            \n                                    Async\n                                deleteFavorite\n                            \n                            \n                                    Async\n                                getFavorites\n                            \n                            \n                                    Async\n                                getOneFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(favoriteModel, userModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/favorites/favorite.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFavorite\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFavorite(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFavorite\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFavorite(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFavorites\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFavorites(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneFavorite\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneFavorite(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Favorites } from './favorite.entity.js'\nimport { User } from '../user.entity.js'\nimport { Products } from '../../products/products.entity.js'\n\ninterface IFavoritesRepository {\n  getOneFavorite(userId: number, productId: number): Promise\n  deleteFavorite(userId: number, productId: number): Promise\n  createFavorite(userId: number, productId: number): Promise\n  getFavorites(id: number): Promise\n}\n\n@Injectable()\nexport class FavoriteRepository implements IFavoritesRepository {\n  constructor(\n    @Inject('FAVORITES')\n    private favoriteModel: typeof Favorites,\n    @Inject('USER')\n    private userModel: typeof User,\n  ) {}\n\n  async getOneFavorite(userId: number, productId: number): Promise {\n    return this.favoriteModel.findOne({\n      where: { userId, productId },\n    })\n  }\n\n  async deleteFavorite(userId: number, productId: number): Promise {\n    await this.favoriteModel.destroy({ where: { userId, productId } })\n  }\n\n  async createFavorite(userId: number, productId: number): Promise {\n    await this.favoriteModel.create({ userId, productId })\n  }\n\n  async getFavorites(id: number): Promise {\n    const data = await this.userModel.findOne({\n      where: { id },\n      include: [\n        {\n          model: Products,\n          as: 'favoriteProducts',\n        },\n      ],\n    })\n\n    return data?.favoriteProducts || []\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Favorites.html":{"url":"classes/Favorites.html","title":"class - Favorites","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Favorites\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/favorites/favorite.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/favorites/favorite.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/favorites/favorite.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  ForeignKey,\n  Model,\n  Table,\n} from 'sequelize-typescript'\nimport { Products } from '../../products/products.entity.js'\nimport { User } from '../user.entity.js'\n\n@Table({ tableName: 'favorites', timestamps: false })\nexport class Favorites extends Model {\n  @ForeignKey(() => User)\n  @Column({ type: DataType.BIGINT, primaryKey: true })\n  userId: number\n\n  @ForeignKey(() => Products)\n  @Column({ type: DataType.BIGINT, primaryKey: true })\n  productId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetFavoritesUseCase.html":{"url":"injectables/GetFavoritesUseCase.html","title":"injectable - GetFavoritesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetFavoritesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/usecases/getFavorites.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(favoriteRepository: FavoriteRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/usecases/getFavorites.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteRepository\n                                                  \n                                                        \n                                                                        FavoriteRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/usecases/getFavorites.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FavoriteRepository } from '../favorites/favorite.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class GetFavoritesUseCase {\n  constructor(@Inject() private favoriteRepository: FavoriteRepository) {}\n\n  async execute(id: number) {\n    return await this.favoriteRepository.getFavorites(id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProductsUseCase.html":{"url":"injectables/GetProductsUseCase.html","title":"injectable - GetProductsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetProductsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/usecases/getProducts.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: ProductsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/usecases/getProducts.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        ProductsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(search?: string, category?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/usecases/getProducts.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ProductsRepository } from '../products.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class GetProductsUseCase {\n  constructor(@Inject() private productsRepository: ProductsRepository) {}\n\n  async execute(search?: string, category?: string) {\n    if (category) {\n      return this.productsRepository.getByCategory(category)\n    }\n\n    if (search) {\n      return this.productsRepository.getByGenericSearch(search)\n    }\n\n    return this.productsRepository.getAllProducts()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetUserUseCase.html":{"url":"injectables/GetUserUseCase.html","title":"injectable - GetUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/usecases/getUser.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/usecases/getUser.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/usecases/getUser.usecase.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config'\nimport { UserRepository } from '../user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class GetUserUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: number) {\n    const user = await this.userRepository.findByField({ id }, true)\n\n    if (!user) {\n      const msg = this.configService.get('userMsg.notFound')\n      throw { custom: { status: 404, msg } }\n    }\n\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleError.html":{"url":"classes/HandleError.html","title":"class - HandleError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/handleError.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                http\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        http\n                        \n                    \n                \n            \n            \n                \n                        \n                    http(err: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/handleError.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common'\n\nexport class HandleError {\n  static http(err: any) {\n    if (err.message) {\n      throw new HttpException(err.message, 422)\n    }\n\n    if (err.custom) {\n      const { custom } = err\n      throw new HttpException(custom.msg, custom.status)\n    }\n\n    console.error(err)\n    throw new HttpException('A server occurred error. Please, try later.', 500)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/httpException.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/httpException.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common'\nimport { Response } from 'express'\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp()\n    const res = ctx.getResponse()\n    const status = exception.getStatus()\n\n    const raw = exception.getResponse() as string\n    const rawIsString = typeof raw === 'string'\n\n    if (rawIsString && !raw.includes('{')) {\n      res.status(status).json({ msg: raw })\n      return\n    }\n\n    const msg = rawIsString ? JSON.parse(raw)['message'] : raw['message']\n\n    res.status(status).json({ msg: Array.isArray(msg) ? msg[0] : msg })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFavoritesRepository.html":{"url":"interfaces/IFavoritesRepository.html","title":"interface - IFavoritesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFavoritesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/favorites/favorite.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createFavorite\n                                    \n                                \n                                \n                                    \n                                        deleteFavorite\n                                    \n                                \n                                \n                                    \n                                        getFavorites\n                                    \n                                \n                                \n                                    \n                                        getOneFavorite\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createFavorite\n                        \n                    \n                \n            \n            \n                \ncreateFavorite(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFavorite\n                        \n                    \n                \n            \n            \n                \ndeleteFavorite(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavorites\n                        \n                    \n                \n            \n            \n                \ngetFavorites(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneFavorite\n                        \n                    \n                \n            \n            \n                \ngetOneFavorite(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/favorites/favorite.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Favorites } from './favorite.entity.js'\nimport { User } from '../user.entity.js'\nimport { Products } from '../../products/products.entity.js'\n\ninterface IFavoritesRepository {\n  getOneFavorite(userId: number, productId: number): Promise\n  deleteFavorite(userId: number, productId: number): Promise\n  createFavorite(userId: number, productId: number): Promise\n  getFavorites(id: number): Promise\n}\n\n@Injectable()\nexport class FavoriteRepository implements IFavoritesRepository {\n  constructor(\n    @Inject('FAVORITES')\n    private favoriteModel: typeof Favorites,\n    @Inject('USER')\n    private userModel: typeof User,\n  ) {}\n\n  async getOneFavorite(userId: number, productId: number): Promise {\n    return this.favoriteModel.findOne({\n      where: { userId, productId },\n    })\n  }\n\n  async deleteFavorite(userId: number, productId: number): Promise {\n    await this.favoriteModel.destroy({ where: { userId, productId } })\n  }\n\n  async createFavorite(userId: number, productId: number): Promise {\n    await this.favoriteModel.create({ userId, productId })\n  }\n\n  async getFavorites(id: number): Promise {\n    const data = await this.userModel.findOne({\n      where: { id },\n      include: [\n        {\n          model: Products,\n          as: 'favoriteProducts',\n        },\n      ],\n    })\n\n    return data?.favoriteProducts || []\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRepository.html":{"url":"interfaces/IUserRepository.html","title":"interface - IUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findByField\n                                    \n                                \n                                \n                                    \n                                        save\n                                    \n                                \n                                \n                                    \n                                        updateField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userAttributes: RegisterBody)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userAttributes\n                                            \n                                                            RegisterBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(target: number | User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            number | User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByField\n                        \n                    \n                \n            \n            \n                \nfindByField(field: Record, restrict?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                restrict\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(undefined: UpdateField)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UpdateField\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FindAttributeOptions } from 'sequelize'\nimport { RegisterBody } from '../auth/dto/registerBody.dto.js'\nimport { User } from './user.entity.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\ninterface UpdateField {\n  user: User\n  fieldName: string\n  fieldValue: any\n}\n\nexport interface IUserRepository {\n  findByField(\n    field: Record,\n    restrict?: boolean,\n  ): Promise\n  delete(target: number | User): Promise\n  updateField({ user, fieldName, fieldValue }: UpdateField): Promise\n  save(user: User): Promise\n  create(userAttributes: RegisterBody): Promise\n}\n\n@Injectable()\nexport class UserRepository implements IUserRepository {\n  constructor(\n    @Inject('USER')\n    private userModel: typeof User,\n  ) {}\n\n  async findByField(\n    field: Record,\n    restrict?: boolean,\n  ): Promise {\n    const fieldKey = Object.keys(field)[0]\n\n    let attributes: FindAttributeOptions | undefined = undefined\n    if (restrict) {\n      attributes = { exclude: ['id', 'passwd', 'verified_email'] }\n    }\n\n    return this.userModel.findOne({\n      where: { [fieldKey]: field[fieldKey] },\n      attributes,\n    })\n  }\n\n  async delete(target: number | User): Promise {\n    if (typeof target === 'number') {\n      await this.userModel.destroy({ where: { id: target } })\n      return\n    }\n    await target.destroy()\n  }\n\n  async updateField({\n    user,\n    fieldName,\n    fieldValue,\n  }: UpdateField): Promise {\n    user[fieldName] = fieldValue\n    await this.save(user)\n  }\n\n  async save(user: User): Promise {\n    await user.save()\n  }\n\n  async create(userAttributes: RegisterBody): Promise {\n    await this.userModel.create(userAttributes)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginBody.html":{"url":"classes/LoginBody.html","title":"class - LoginBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/loginBody.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                passwd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(0, 100)@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/loginBody.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        passwd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(6, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/loginBody.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator'\n\nexport class LoginBody {\n  @IsNotEmpty()\n  @Length(0, 100)\n  @IsEmail()\n  email: string\n\n  @IsNotEmpty()\n  @Length(6, 16)\n  passwd: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginUseCase.html":{"url":"injectables/LoginUseCase.html","title":"injectable - LoginUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/usecases/login.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/usecases/login.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: LoginBody)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/usecases/login.usecase.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            LoginBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LoginBody } from '../dto/loginBody.dto.js'\nimport { UserRepository } from '../../user/user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\nimport * as bcrypt from 'bcrypt'\nimport jwt from 'jsonwebtoken'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class LoginUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n  ) {}\n\n  async execute({ email, passwd }: LoginBody) {\n    const user = await this.userRepository.findByField({ email })\n\n    if (!user) {\n      const msg = this.configService.get('userMsg.notFound')\n      throw { custom: { status: 404, msg } }\n    }\n\n    if (!user.verified_email) {\n      const msg = this.configService.get('authMsg.noVerifiedEmail')\n      throw { custom: { status: 400, msg } }\n    }\n\n    const checkPasswd = await bcrypt.compare(passwd, user.passwd)\n\n    if (!checkPasswd) {\n      const msg = this.configService.get('authMsg.incorrect')\n      throw { custom: { status: 422, msg } }\n    }\n\n    const token = jwt.sign(\n      { id: user.id },\n      this.configService.get('env.SECRET'),\n      {\n        expiresIn: `${this.configService.get('env.AUTH_DURATION_DAYS') * 24}h`,\n      },\n    )\n\n    return token\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswdRecoveryUseCase.html":{"url":"injectables/PasswdRecoveryUseCase.html","title":"injectable - PasswdRecoveryUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswdRecoveryUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/usecases/passwdRecovery.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository, commonServices: CommonServices)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/usecases/passwdRecovery.usecase.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonServices\n                                                  \n                                                        \n                                                                        CommonServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/usecases/passwdRecovery.usecase.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserRepository } from '../../user/user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\nimport jwt from 'jsonwebtoken'\nimport { CommonServices } from '../../common/common.service.js'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class PasswdRecoveryUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n    @Inject()\n    private commonServices: CommonServices,\n  ) {}\n\n  async execute(email: string) {\n    const userExists = await this.userRepository.findByField({ email })\n\n    if (!userExists) {\n      const msg = this.configService.get('userMsg.notFound')\n      throw { custom: { status: 404, msg } }\n    }\n\n    const recoveryToken = jwt.sign(\n      { email },\n      this.configService.get('env.SECRET'),\n      {\n        expiresIn: '1h',\n      },\n    )\n\n    const recoveryLink = `${this.configService.get('env.ORIGIN_ADDR')}/passwd-change/${recoveryToken}`\n\n    await this.commonServices.sendLink({\n      to: email,\n      subject: 'Password Recovery',\n      link: recoveryLink,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopulateProductsService.html":{"url":"injectables/PopulateProductsService.html","title":"injectable - PopulateProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PopulateProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seed/populateProducts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateProducts\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database/seed/populateProducts.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seed/populateProducts.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ProductEl[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seed/populateProducts.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seed/populateProducts.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEl[]\n\n                    \n                \n                    \n                        \n                                Defined in src/database/seed/populateProducts.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Products } from '../../modules/products/products.entity.js'\nimport { faker } from '@faker-js/faker'\nimport { ConfigService } from '@nestjs/config'\n\ninterface ProductEl {\n  category: string\n  productName: string\n  info: string\n  img: string\n  oldPrice: number\n  price: number\n}\n\n@Injectable()\nexport class PopulateProductsService {\n  private products: ProductEl[]\n\n  constructor(@Inject() private configService: ConfigService) {\n    this.products = this.generateProducts()\n  }\n\n  private generateProducts(): ProductEl[] {\n    return [\n      ...Array.from({ length: 7 }, () => ({\n        category: 'Recommended',\n        productName: faker.commerce.productName().slice(0, 20),\n        info: faker.commerce.productDescription().slice(0, 20),\n        img: `${this.configService.get('env.API_ADDR')}/public/product.webp`,\n        oldPrice: 5.99,\n        price: 2.99,\n      })),\n      ...Array.from({ length: 7 }, () => ({\n        category: 'Popular 2024',\n        productName: faker.commerce.productName().slice(0, 20),\n        info: faker.commerce.productDescription().slice(0, 20),\n        img: `${this.configService.get('env.API_ADDR')}/public/product.webp`,\n        oldPrice: 3.25,\n        price: 1.99,\n      })),\n      ...Array.from({ length: 7 }, () => ({\n        category: 'The best',\n        productName: faker.commerce.productName().slice(0, 20),\n        info: faker.commerce.productDescription().slice(0, 20),\n        img: `${this.configService.get('env.API_ADDR')}/public/product.webp`,\n        oldPrice: 24.99,\n        price: 14.99,\n      })),\n    ]\n  }\n\n  async init() {\n    try {\n      await Products.destroy({ where: {} })\n      console.log('SEED INIT')\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  async run() {\n    try {\n      for (const product of this.products) {\n        const { productName, img, category, price, oldPrice, info } = product\n\n        await Products.create({\n          productName,\n          img,\n          category,\n          price,\n          oldPrice,\n          info,\n        })\n      }\n      console.log('SEED RUN\\n')\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductEl.html":{"url":"interfaces/ProductEl.html","title":"interface - ProductEl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductEl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seed/populateProducts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            img\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                                \n                                        \n                                            oldPrice\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oldPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Products } from '../../modules/products/products.entity.js'\nimport { faker } from '@faker-js/faker'\nimport { ConfigService } from '@nestjs/config'\n\ninterface ProductEl {\n  category: string\n  productName: string\n  info: string\n  img: string\n  oldPrice: number\n  price: number\n}\n\n@Injectable()\nexport class PopulateProductsService {\n  private products: ProductEl[]\n\n  constructor(@Inject() private configService: ConfigService) {\n    this.products = this.generateProducts()\n  }\n\n  private generateProducts(): ProductEl[] {\n    return [\n      ...Array.from({ length: 7 }, () => ({\n        category: 'Recommended',\n        productName: faker.commerce.productName().slice(0, 20),\n        info: faker.commerce.productDescription().slice(0, 20),\n        img: `${this.configService.get('env.API_ADDR')}/public/product.webp`,\n        oldPrice: 5.99,\n        price: 2.99,\n      })),\n      ...Array.from({ length: 7 }, () => ({\n        category: 'Popular 2024',\n        productName: faker.commerce.productName().slice(0, 20),\n        info: faker.commerce.productDescription().slice(0, 20),\n        img: `${this.configService.get('env.API_ADDR')}/public/product.webp`,\n        oldPrice: 3.25,\n        price: 1.99,\n      })),\n      ...Array.from({ length: 7 }, () => ({\n        category: 'The best',\n        productName: faker.commerce.productName().slice(0, 20),\n        info: faker.commerce.productDescription().slice(0, 20),\n        img: `${this.configService.get('env.API_ADDR')}/public/product.webp`,\n        oldPrice: 24.99,\n        price: 14.99,\n      })),\n    ]\n  }\n\n  async init() {\n    try {\n      await Products.destroy({ where: {} })\n      console.log('SEED INIT')\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  async run() {\n    try {\n      for (const product of this.products) {\n        const { productName, img, category, price, oldPrice, info } = product\n\n        await Products.create({\n          productName,\n          img,\n          category,\n          price,\n          oldPrice,\n          info,\n        })\n      }\n      console.log('SEED RUN\\n')\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductRepositoryInterface.html":{"url":"interfaces/ProductRepositoryInterface.html","title":"interface - ProductRepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductRepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAllProducts\n                                    \n                                \n                                \n                                    \n                                        getByCategory\n                                    \n                                \n                                \n                                    \n                                        getByGenericSearch\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByCategory\n                        \n                    \n                \n            \n            \n                \ngetByCategory(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByGenericSearch\n                        \n                    \n                \n            \n            \n                \ngetByGenericSearch(search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Sequelize, Op } from 'sequelize'\nimport { Products } from './products.entity.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\ninterface ProductRepositoryInterface {\n  getAllProducts(): Promise\n  getByCategory(category: string): Promise\n  getByGenericSearch(search: string): Promise\n}\n\n@Injectable()\nexport class ProductsRepository implements ProductRepositoryInterface {\n  constructor(\n    @Inject('PRODUCTS')\n    private productModel: typeof Products,\n  ) {}\n\n  async getAllProducts(): Promise {\n    return this.productModel.findAll()\n  }\n\n  async getByCategory(category: string): Promise {\n    return this.productModel.findAll({ where: { category } })\n  }\n\n  async getByGenericSearch(search: string): Promise {\n    return this.productModel.findAll({\n      where: {\n        [Op.or]: [\n          Sequelize.where(Sequelize.fn('LOWER', Sequelize.col('productName')), {\n            [Op.like]: `%${search.toLowerCase()}%`,\n          }),\n          Sequelize.where(Sequelize.fn('LOWER', Sequelize.col('info')), {\n            [Op.like]: `%${search.toLowerCase()}%`,\n          }),\n        ],\n      },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Products.html":{"url":"classes/Products.html","title":"class - Products","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Products\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                img\n                            \n                            \n                                    \n                                info\n                            \n                            \n                                    \n                                oldPrice\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productName\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, autoIncrement: true, primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        oldPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, {through: () => Favorites, foreignKey: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/products.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BelongsToMany,\n  Column,\n  DataType,\n  Model,\n  Table,\n} from 'sequelize-typescript'\nimport { User } from '../user/user.entity.js'\nimport { Favorites } from '../user/favorites/favorite.entity.js'\n\n@Table({ tableName: 'products', timestamps: false })\nexport class Products extends Model {\n  @Column({\n    type: DataType.BIGINT,\n    autoIncrement: true,\n    primaryKey: true,\n  })\n  id: number\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  category: string\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  productName: string\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  info: string\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  img: string\n\n  @Column({\n    type: DataType.DECIMAL,\n    allowNull: false,\n  })\n  oldPrice: number\n\n  @Column({\n    type: DataType.DECIMAL,\n    allowNull: false,\n  })\n  price: number\n\n  @BelongsToMany(() => User, {\n    through: () => Favorites,\n    foreignKey: {\n      name: 'productId',\n    },\n  })\n  users: User[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsControllers.html":{"url":"controllers/ProductsControllers.html","title":"controller - ProductsControllers","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsControllers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducts(query?: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { GetProductsUseCase } from './usecases/getProducts.usecase.js'\nimport { HandleError } from '../../utils/handleError.js'\nimport { Controller, Get, Inject, Query } from '@nestjs/common'\n\n@Controller('/products')\nexport class ProductsControllers {\n  constructor(\n    @Inject()\n    private getProductsUseCase: GetProductsUseCase,\n  ) {}\n\n  @Get('/')\n  async getProducts(@Query() query?: { search?: string; category?: string }) {\n    try {\n      const { search, category } = query\n\n      const filteredProducts = await this.getProductsUseCase.execute(\n        search,\n        category,\n      )\n\n      return filteredProducts\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nDatabaseModule->ProductsModule\n\n\n\n\n\nGetProductsUseCase\n\nGetProductsUseCase\n\nProductsModule -->\n\nGetProductsUseCase->ProductsModule\n\n\n\n\n\nProductsRepository\n\nProductsRepository\n\nProductsModule -->\n\nProductsRepository->ProductsModule\n\n\n\n\n\nProductsServices\n\nProductsServices\n\nProductsModule -->\n\nProductsServices->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GetProductsUseCase\n                        \n                        \n                            ProductsRepository\n                        \n                        \n                            ProductsServices\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsControllers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ProductsServices } from './products.service.js'\nimport { GetProductsUseCase } from './usecases/getProducts.usecase.js'\nimport { ProductsRepository } from './products.repository.js'\nimport { ProductsControllers } from './products.controller.js'\nimport { DatabaseModule } from '../../database/database.module.js'\nimport { productsProviders } from './products.providers.js'\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [ProductsControllers],\n  providers: [\n    ProductsServices,\n    GetProductsUseCase,\n    ProductsRepository,\n    ...productsProviders,\n  ],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsRepository.html":{"url":"injectables/ProductsRepository.html","title":"injectable - ProductsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getByCategory\n                            \n                            \n                                    Async\n                                getByGenericSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByCategory(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.repository.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByGenericSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByGenericSearch(search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Sequelize, Op } from 'sequelize'\nimport { Products } from './products.entity.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\ninterface ProductRepositoryInterface {\n  getAllProducts(): Promise\n  getByCategory(category: string): Promise\n  getByGenericSearch(search: string): Promise\n}\n\n@Injectable()\nexport class ProductsRepository implements ProductRepositoryInterface {\n  constructor(\n    @Inject('PRODUCTS')\n    private productModel: typeof Products,\n  ) {}\n\n  async getAllProducts(): Promise {\n    return this.productModel.findAll()\n  }\n\n  async getByCategory(category: string): Promise {\n    return this.productModel.findAll({ where: { category } })\n  }\n\n  async getByGenericSearch(search: string): Promise {\n    return this.productModel.findAll({\n      where: {\n        [Op.or]: [\n          Sequelize.where(Sequelize.fn('LOWER', Sequelize.col('productName')), {\n            [Op.like]: `%${search.toLowerCase()}%`,\n          }),\n          Sequelize.where(Sequelize.fn('LOWER', Sequelize.col('info')), {\n            [Op.like]: `%${search.toLowerCase()}%`,\n          }),\n        ],\n      },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsServices.html":{"url":"injectables/ProductsServices.html","title":"injectable - ProductsServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getProductsUseCase: GetProductsUseCase)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getProductsUseCase\n                                                  \n                                                        \n                                                                        GetProductsUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducts(search?: string, category?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GetProductsUseCase } from './usecases/getProducts.usecase.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class ProductsServices {\n  constructor(\n    @Inject()\n    private getProductsUseCase: GetProductsUseCase,\n  ) {}\n\n  async getProducts(search?: string, category?: string) {\n    return this.getProductsUseCase.execute(search, category)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterBody.html":{"url":"classes/RegisterBody.html","title":"class - RegisterBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/registerBody.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                passwd\n                            \n                            \n                                    \n                                    \n                                uname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(0, 100)@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/registerBody.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        passwd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(6, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/registerBody.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(3, 50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/registerBody.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator'\n\nexport class RegisterBody {\n  @IsNotEmpty()\n  @Length(3, 50)\n  uname: string\n\n  @IsNotEmpty()\n  @Length(0, 100)\n  @IsEmail()\n  email: string\n\n  @IsNotEmpty()\n  @Length(6, 16)\n  passwd: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterUseCase.html":{"url":"injectables/RegisterUseCase.html","title":"injectable - RegisterUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/usecases/register.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: UserRepository, commonServices: CommonServices)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/usecases/register.usecase.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonServices\n                                                  \n                                                        \n                                                                        CommonServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: RegisterUserCaseProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/usecases/register.usecase.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RegisterUserCaseProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserRepository } from '../../user/user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\nimport * as bcrypt from 'bcrypt'\nimport jwt from 'jsonwebtoken'\nimport { CommonServices } from '../../common/common.service.js'\nimport { ConfigService } from '@nestjs/config'\n\ninterface RegisterUserCaseProps {\n  uname: string\n  passwd: string\n  email: string\n}\n\n@Injectable()\nexport class RegisterUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n    @Inject()\n    private commonServices: CommonServices,\n  ) {}\n\n  async execute({ uname, passwd, email }: RegisterUserCaseProps) {\n    const emailExists = await this.userRepository.findByField({ email })\n\n    if (emailExists) {\n      const msg = this.configService.get('authMsg.emailExists')\n      throw { custom: { status: 409, msg } }\n    }\n\n    const salt = await bcrypt.genSalt(10)\n    const hashedPasswd = await bcrypt.hash(passwd, salt)\n\n    await this.userRepository.create({\n      uname,\n      email,\n      passwd: hashedPasswd,\n    })\n\n    const emailToken = jwt.sign(\n      { email },\n      this.configService.get('env.SECRET'),\n      {\n        expiresIn: '1h',\n      },\n    )\n\n    const verifyLink = `${this.configService.get('env.API_ADDR')}/auth/email-verify/${emailToken}`\n\n    this.commonServices.sendLink({\n      to: email,\n      subject: 'Email Verification Link',\n      link: verifyLink,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterUserCaseProps.html":{"url":"interfaces/RegisterUserCaseProps.html","title":"interface - RegisterUserCaseProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterUserCaseProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/usecases/register.usecase.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            passwd\n                                        \n                                \n                                \n                                        \n                                            uname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRepository } from '../../user/user.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\nimport * as bcrypt from 'bcrypt'\nimport jwt from 'jsonwebtoken'\nimport { CommonServices } from '../../common/common.service.js'\nimport { ConfigService } from '@nestjs/config'\n\ninterface RegisterUserCaseProps {\n  uname: string\n  passwd: string\n  email: string\n}\n\n@Injectable()\nexport class RegisterUseCase {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userRepository: UserRepository,\n    @Inject()\n    private commonServices: CommonServices,\n  ) {}\n\n  async execute({ uname, passwd, email }: RegisterUserCaseProps) {\n    const emailExists = await this.userRepository.findByField({ email })\n\n    if (emailExists) {\n      const msg = this.configService.get('authMsg.emailExists')\n      throw { custom: { status: 409, msg } }\n    }\n\n    const salt = await bcrypt.genSalt(10)\n    const hashedPasswd = await bcrypt.hash(passwd, salt)\n\n    await this.userRepository.create({\n      uname,\n      email,\n      passwd: hashedPasswd,\n    })\n\n    const emailToken = jwt.sign(\n      { email },\n      this.configService.get('env.SECRET'),\n      {\n        expiresIn: '1h',\n      },\n    )\n\n    const verifyLink = `${this.configService.get('env.API_ADDR')}/auth/email-verify/${emailToken}`\n\n    this.commonServices.sendLink({\n      to: email,\n      subject: 'Email Verification Link',\n      link: verifyLink,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RmUnverifiedUsers.html":{"url":"injectables/RmUnverifiedUsers.html","title":"injectable - RmUnverifiedUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RmUnverifiedUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/rmUnverifiedUsers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 0 * * *')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/rmUnverifiedUsers.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Op } from 'sequelize'\nimport { User } from '../modules/user/user.entity.js'\nimport { Injectable } from '@nestjs/common'\nimport { Cron } from '@nestjs/schedule'\n\n@Injectable()\nexport class RmUnverifiedUsers {\n  @Cron('0 0 * * *')\n  async handleCron() {\n    try {\n      const paramDate = new Date(Date.now() - 1 * 60 * 60 * 1000)\n\n      await User.destroy({\n        where: {\n          verified_email: false,\n          createdAt: {\n            [Op.lt]: paramDate,\n          },\n        },\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailProps.html":{"url":"interfaces/SendEmailProps.html","title":"interface - SendEmailProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendEmailProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/common.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport jwt, { JwtPayload } from 'jsonwebtoken'\nimport * as nodemailer from 'nodemailer'\n\ninterface SendEmailProps {\n  to: string\n  subject: string\n  link: string\n}\n\n@Injectable()\nexport class CommonServices {\n  constructor(@Inject() private configService: ConfigService) {}\n\n  extractJwtPayload(token: string, payloadName?: string) {\n    const payload = jwt.verify(\n      token,\n      this.configService.get('env.SECRET'),\n    ) as JwtPayload\n    return payloadName && payload[payloadName]\n  }\n\n  private transporter = nodemailer.createTransport({\n    host: 'smtp.gmail.com',\n    port: 465,\n    secure: true,\n    auth: {\n      user: this.configService.get('env.SMTP_USER'),\n      pass: this.configService.get('env.SMTP_PASS'),\n    },\n  })\n\n  async sendLink({ to, subject, link }: SendEmailProps): Promise {\n    await this.transporter.sendMail({\n      from: 'Develop Store',\n      to,\n      subject,\n      html: `${link}`,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleFavoriteBody.html":{"url":"classes/ToggleFavoriteBody.html","title":"class - ToggleFavoriteBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleFavoriteBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/toggleFavoriteBody.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/toggleFavoriteBody.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator'\n\nexport class ToggleFavoriteBody {\n  @IsNotEmpty()\n  productId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToggleFavoriteUseCase.html":{"url":"injectables/ToggleFavoriteUseCase.html","title":"injectable - ToggleFavoriteUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToggleFavoriteUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/usecases/toggleFavorite.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(favoriteRepository: FavoriteRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/usecases/toggleFavorite.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteRepository\n                                                  \n                                                        \n                                                                        FavoriteRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(userId: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/usecases/toggleFavorite.usecase.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FavoriteRepository } from '../favorites/favorite.repository.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class ToggleFavoriteUseCase {\n  constructor(\n    @Inject()\n    private favoriteRepository: FavoriteRepository,\n  ) {}\n\n  async execute(userId: number, productId: number) {\n    const favorite = await this.favoriteRepository.getOneFavorite(\n      userId,\n      productId,\n    )\n\n    if (favorite) {\n      await this.favoriteRepository.deleteFavorite(userId, productId)\n      return\n    }\n\n    await this.favoriteRepository.createFavorite(userId, productId)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateField.html":{"url":"interfaces/UpdateField.html","title":"interface - UpdateField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                        \n                                            fieldValue\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldValue:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FindAttributeOptions } from 'sequelize'\nimport { RegisterBody } from '../auth/dto/registerBody.dto.js'\nimport { User } from './user.entity.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\ninterface UpdateField {\n  user: User\n  fieldName: string\n  fieldValue: any\n}\n\nexport interface IUserRepository {\n  findByField(\n    field: Record,\n    restrict?: boolean,\n  ): Promise\n  delete(target: number | User): Promise\n  updateField({ user, fieldName, fieldValue }: UpdateField): Promise\n  save(user: User): Promise\n  create(userAttributes: RegisterBody): Promise\n}\n\n@Injectable()\nexport class UserRepository implements IUserRepository {\n  constructor(\n    @Inject('USER')\n    private userModel: typeof User,\n  ) {}\n\n  async findByField(\n    field: Record,\n    restrict?: boolean,\n  ): Promise {\n    const fieldKey = Object.keys(field)[0]\n\n    let attributes: FindAttributeOptions | undefined = undefined\n    if (restrict) {\n      attributes = { exclude: ['id', 'passwd', 'verified_email'] }\n    }\n\n    return this.userModel.findOne({\n      where: { [fieldKey]: field[fieldKey] },\n      attributes,\n    })\n  }\n\n  async delete(target: number | User): Promise {\n    if (typeof target === 'number') {\n      await this.userModel.destroy({ where: { id: target } })\n      return\n    }\n    await target.destroy()\n  }\n\n  async updateField({\n    user,\n    fieldName,\n    fieldValue,\n  }: UpdateField): Promise {\n    user[fieldName] = fieldValue\n    await this.save(user)\n  }\n\n  async save(user: User): Promise {\n    await user.save()\n  }\n\n  async create(userAttributes: RegisterBody): Promise {\n    await this.userModel.create(userAttributes)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                favoriteProducts\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                passwd\n                            \n                            \n                                    \n                                uname\n                            \n                            \n                                    \n                                verified_email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        favoriteProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, {through: () => Favorites, foreignKey: undefined, as: 'favoriteProducts'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, primaryKey: true, autoIncrement: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        verified_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, defaultValue: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Model,\n  Column,\n  DataType,\n  BelongsToMany,\n} from 'sequelize-typescript'\nimport { Products } from '../products/products.entity.js'\nimport { Favorites } from './favorites/favorite.entity.js'\n\n@Table({ tableName: 'users', updatedAt: false })\nexport class User extends Model {\n  @Column({\n    type: DataType.BIGINT,\n    primaryKey: true,\n    autoIncrement: true,\n  })\n  id: number\n\n  @Column({\n    type: DataType.STRING(50),\n    allowNull: false,\n  })\n  uname: string\n\n  @Column({\n    type: DataType.STRING(100),\n    allowNull: false,\n  })\n  email: string\n\n  @Column({\n    type: DataType.BOOLEAN,\n    allowNull: false,\n    defaultValue: false,\n  })\n  verified_email: boolean\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  passwd: string\n\n  @BelongsToMany(() => Products, {\n    through: () => Favorites,\n    foreignKey: {\n      name: 'userId',\n    },\n    as: 'favoriteProducts',\n  })\n  favoriteProducts: Products[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserControllers.html":{"url":"controllers/UserControllers.html","title":"controller - UserControllers","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserControllers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                changePasswd\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                getFavorites\n                            \n                            \n                                    \n                                    Async\n                                getUser\n                            \n                            \n                                    \n                                    Async\n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        changePasswd\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePasswd(body: ChangePasswdBody, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/change-passwd')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswdBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFavorites\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFavorites(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get-favorites')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFavorite(body: ToggleFavoriteBody, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/toggle-favorite')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ToggleFavoriteBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { HandleError } from '../../utils/handleError.js'\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  Patch,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common'\nimport { Request, Response } from 'express'\nimport { ChangePasswdBody } from './dto/changePasswdBody.dto.js'\nimport { isLoggedIn } from '../../guard/isLoggedIn.guard.js'\nimport { UserServices } from './user.service.js'\nimport { ConfigService } from '@nestjs/config'\nimport { ToggleFavoriteBody } from './dto/toggleFavoriteBody.dto.js'\n\n@Controller('/user')\n@UseGuards(isLoggedIn)\nexport class UserControllers {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n    @Inject()\n    private userServices: UserServices,\n  ) {}\n\n  @Get('/')\n  async getUser(@Req() req: Request) {\n    try {\n      const { token } = req.cookies\n      const user = await this.userServices.getUser(token)\n      return user\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Patch('/change-passwd')\n  async changePasswd(@Body() body: ChangePasswdBody, @Req() req: Request) {\n    try {\n      const { token } = req.cookies\n      const { passwd } = body\n\n      await this.userServices.changePasswd(token, passwd)\n\n      return { msg: this.configService.get('userMsg.updated') }\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Delete('/delete')\n  async deleteUser(@Req() req: Request, @Res() res: Response) {\n    try {\n      const { token } = req.cookies\n\n      await this.userServices.deleteUser(token)\n\n      res.clearCookie('token')\n      res.status(200).json({ msg: this.configService.get('userMsg.deleted') })\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Post('/toggle-favorite')\n  async toggleFavorite(@Body() body: ToggleFavoriteBody, @Req() req: Request) {\n    try {\n      const { token } = req.cookies\n      const { productId } = body\n      await this.userServices.toggleFavorite(token, productId)\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n\n  @Get('/get-favorites')\n  async getFavorites(@Req() req: Request) {\n    try {\n      const { token } = req.cookies\n      const favorites = await this.userServices.getFavorites(token)\n      return favorites\n    } catch (err) {\n      HandleError.http(err)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nFavoriteRepository \n\nFavoriteRepository \n\nFavoriteRepository  -->\n\nUserModule->FavoriteRepository \n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUserModule->UserRepository \n\n\n\n\n\nChangePasswdUseCase\n\nChangePasswdUseCase\n\nUserModule -->\n\nChangePasswdUseCase->UserModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nUserModule -->\n\nDeleteUserUseCase->UserModule\n\n\n\n\n\nFavoriteRepository\n\nFavoriteRepository\n\nUserModule -->\n\nFavoriteRepository->UserModule\n\n\n\n\n\nGetFavoritesUseCase\n\nGetFavoritesUseCase\n\nUserModule -->\n\nGetFavoritesUseCase->UserModule\n\n\n\n\n\nGetUserUseCase\n\nGetUserUseCase\n\nUserModule -->\n\nGetUserUseCase->UserModule\n\n\n\n\n\nToggleFavoriteUseCase\n\nToggleFavoriteUseCase\n\nUserModule -->\n\nToggleFavoriteUseCase->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChangePasswdUseCase\n                        \n                        \n                            DeleteUserUseCase\n                        \n                        \n                            FavoriteRepository\n                        \n                        \n                            GetFavoritesUseCase\n                        \n                        \n                            GetUserUseCase\n                        \n                        \n                            ToggleFavoriteUseCase\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserControllers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoriteRepository\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserControllers } from './user.controller.js'\nimport { UserServices } from './user.service.js'\nimport { GetUserUseCase } from './usecases/getUser.usecase.js'\nimport { DeleteUserUseCase } from './usecases/deleteUser.usecase.js'\nimport { ToggleFavoriteUseCase } from './usecases/toggleFavorite.usecase.js'\nimport { GetFavoritesUseCase } from './usecases/getFavorites.usecase.js'\nimport { ChangePasswdUseCase } from './usecases/changePasswd.usecase.js'\nimport { UserRepository } from './user.repository.js'\nimport { CommonModule } from '../common/common.module.js'\nimport { DatabaseModule } from '../../database/database.module.js'\nimport { userProviders } from './providers/user.providers.js'\nimport { favoriteProviders } from './providers/favorite.providers.js'\nimport { ConfigModule } from '@nestjs/config'\nimport { FavoriteRepository } from './favorites/favorite.repository.js'\n\n@Module({\n  imports: [CommonModule, DatabaseModule, ConfigModule],\n  controllers: [UserControllers],\n  providers: [\n    UserServices,\n    GetUserUseCase,\n    DeleteUserUseCase,\n    ToggleFavoriteUseCase,\n    GetFavoritesUseCase,\n    ChangePasswdUseCase,\n    FavoriteRepository,\n    UserRepository,\n    ...userProviders,\n    ...favoriteProviders,\n  ],\n  exports: [UserRepository, FavoriteRepository],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByField\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.repository.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userAttributes: RegisterBody)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userAttributes\n                                            \n                                                            RegisterBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(target: number | User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            number | User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByField\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByField(field: Record, restrict?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                restrict\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateField\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateField(undefined: UpdateField)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UpdateField\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FindAttributeOptions } from 'sequelize'\nimport { RegisterBody } from '../auth/dto/registerBody.dto.js'\nimport { User } from './user.entity.js'\nimport { Inject, Injectable } from '@nestjs/common'\n\ninterface UpdateField {\n  user: User\n  fieldName: string\n  fieldValue: any\n}\n\nexport interface IUserRepository {\n  findByField(\n    field: Record,\n    restrict?: boolean,\n  ): Promise\n  delete(target: number | User): Promise\n  updateField({ user, fieldName, fieldValue }: UpdateField): Promise\n  save(user: User): Promise\n  create(userAttributes: RegisterBody): Promise\n}\n\n@Injectable()\nexport class UserRepository implements IUserRepository {\n  constructor(\n    @Inject('USER')\n    private userModel: typeof User,\n  ) {}\n\n  async findByField(\n    field: Record,\n    restrict?: boolean,\n  ): Promise {\n    const fieldKey = Object.keys(field)[0]\n\n    let attributes: FindAttributeOptions | undefined = undefined\n    if (restrict) {\n      attributes = { exclude: ['id', 'passwd', 'verified_email'] }\n    }\n\n    return this.userModel.findOne({\n      where: { [fieldKey]: field[fieldKey] },\n      attributes,\n    })\n  }\n\n  async delete(target: number | User): Promise {\n    if (typeof target === 'number') {\n      await this.userModel.destroy({ where: { id: target } })\n      return\n    }\n    await target.destroy()\n  }\n\n  async updateField({\n    user,\n    fieldName,\n    fieldValue,\n  }: UpdateField): Promise {\n    user[fieldName] = fieldValue\n    await this.save(user)\n  }\n\n  async save(user: User): Promise {\n    await user.save()\n  }\n\n  async create(userAttributes: RegisterBody): Promise {\n    await this.userModel.create(userAttributes)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserServices.html":{"url":"classes/UserServices.html","title":"class - UserServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePasswd\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getFavorites\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonServices: CommonServices, getUserUseCase: GetUserUseCase, changePasswdUseCase: ChangePasswdUseCase, deleteUserUseCase: DeleteUserUseCase, toggleFavoriteUseCase: ToggleFavoriteUseCase, getFavoritesUseCase: GetFavoritesUseCase)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonServices\n                                                  \n                                                        \n                                                                        CommonServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getUserUseCase\n                                                  \n                                                        \n                                                                        GetUserUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswdUseCase\n                                                  \n                                                        \n                                                                        ChangePasswdUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteUserUseCase\n                                                  \n                                                        \n                                                                        DeleteUserUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toggleFavoriteUseCase\n                                                  \n                                                        \n                                                                        ToggleFavoriteUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFavoritesUseCase\n                                                  \n                                                        \n                                                                        GetFavoritesUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePasswd\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePasswd(token: string, newPasswd: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPasswd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFavorites\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFavorites(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFavorite(token: string, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ChangePasswdUseCase } from './usecases/changePasswd.usecase.js'\nimport { DeleteUserUseCase } from './usecases/deleteUser.usecase.js'\nimport { GetFavoritesUseCase } from './usecases/getFavorites.usecase.js'\nimport { GetUserUseCase } from './usecases/getUser.usecase.js'\nimport { ToggleFavoriteUseCase } from './usecases/toggleFavorite.usecase.js'\nimport { Inject } from '@nestjs/common'\nimport { CommonServices } from '../common/common.service.js'\n\nexport class UserServices {\n  constructor(\n    @Inject()\n    private commonServices: CommonServices,\n    @Inject()\n    private getUserUseCase: GetUserUseCase,\n    @Inject()\n    private changePasswdUseCase: ChangePasswdUseCase,\n    @Inject()\n    private deleteUserUseCase: DeleteUserUseCase,\n    @Inject()\n    private toggleFavoriteUseCase: ToggleFavoriteUseCase,\n    @Inject()\n    private getFavoritesUseCase: GetFavoritesUseCase,\n  ) {}\n\n  async getUser(token: string) {\n    const id = this.commonServices.extractJwtPayload(token, 'id')\n    return this.getUserUseCase.execute(id)\n  }\n\n  async changePasswd(token: string, newPasswd: string) {\n    const email = this.commonServices.extractJwtPayload(token, 'email')\n    return this.changePasswdUseCase.execute(email, newPasswd)\n  }\n\n  async deleteUser(token: string) {\n    const id = this.commonServices.extractJwtPayload(token, 'id')\n    return this.deleteUserUseCase.execute(id)\n  }\n\n  async toggleFavorite(token: string, productId: number) {\n    const userId = this.commonServices.extractJwtPayload(token, 'id')\n    return this.toggleFavoriteUseCase.execute(userId, productId)\n  }\n\n  async getFavorites(token: string) {\n    const id = this.commonServices.extractJwtPayload(token, 'id')\n    return this.getFavoritesUseCase.execute(id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/configuration.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seed/populateProducts.service.ts\n            \n            injectable\n            PopulateProductsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/database/seed/populateProducts.service.ts\n            \n            interface\n            ProductEl\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/filters/httpException.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guard/isLoggedIn.guard.ts\n            \n            guard\n            isLoggedIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/rmUnverifiedUsers.service.ts\n            \n            injectable\n            RmUnverifiedUsers\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthControllers\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthServices\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/loginBody.dto.ts\n            \n            class\n            LoginBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/registerBody.dto.ts\n            \n            class\n            RegisterBody\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/usecases/emailVerify.usecase.ts\n            \n            injectable\n            EmailVerifyUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/usecases/login.usecase.ts\n            \n            injectable\n            LoginUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/usecases/passwdRecovery.usecase.ts\n            \n            injectable\n            PasswdRecoveryUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/usecases/register.usecase.ts\n            \n            injectable\n            RegisterUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/usecases/register.usecase.ts\n            \n            interface\n            RegisterUserCaseProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/common/common.service.ts\n            \n            injectable\n            CommonServices\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/common/common.service.ts\n            \n            interface\n            SendEmailProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsControllers\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/products/products.entity.ts\n            \n            class\n            Products\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/products/products.providers.ts\n            \n            variable\n            productsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/products.repository.ts\n            \n            injectable\n            ProductsRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/products/products.repository.ts\n            \n            interface\n            ProductRepositoryInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsServices\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/usecases/getProducts.usecase.ts\n            \n            injectable\n            GetProductsUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/changePasswdBody.dto.ts\n            \n            class\n            ChangePasswdBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/dto/toggleFavoriteBody.dto.ts\n            \n            class\n            ToggleFavoriteBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/favorites/favorite.entity.ts\n            \n            class\n            Favorites\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/favorites/favorite.repository.ts\n            \n            injectable\n            FavoriteRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/favorites/favorite.repository.ts\n            \n            interface\n            IFavoritesRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/providers/favorite.providers.ts\n            \n            variable\n            favoriteProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/providers/user.providers.ts\n            \n            variable\n            userProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/usecases/changePasswd.usecase.ts\n            \n            injectable\n            ChangePasswdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/usecases/deleteUser.usecase.ts\n            \n            injectable\n            DeleteUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/usecases/getFavorites.usecase.ts\n            \n            injectable\n            GetFavoritesUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/usecases/getUser.usecase.ts\n            \n            injectable\n            GetUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/usecases/toggleFavorite.usecase.ts\n            \n            injectable\n            ToggleFavoriteUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserControllers\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user.repository.ts\n            \n            interface\n            IUserRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/user.repository.ts\n            \n            interface\n            UpdateField\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            class\n            UserServices\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/handleError.ts\n            \n            class\n            HandleError\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @faker-js/faker : ^8.4.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^4.1.0\n        \n            @nestjs/sequelize : ^10.0.1\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.0\n        \n            bcrypt : ^5.1.1\n        \n            cacheable-request : ^12.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            cors : ^2.8.5\n        \n            dotenv : ^16.4.5\n        \n            express-rate-limit : ^7.4.0\n        \n            http-cache-semantics : ^4.1.1\n        \n            jsonwebtoken : ^9.0.2\n        \n            nodemailer : ^6.9.14\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            sequelize : ^6.37.3\n        \n            sequelize-typescript : ^2.1.6\n        \n            sqlite3 : ^5.1.7\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/isLoggedIn.html":{"url":"guards/isLoggedIn.html","title":"guard - isLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    isLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/isLoggedIn.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/guard/isLoggedIn.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guard/isLoggedIn.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  Inject,\n  Injectable,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport jwt from 'jsonwebtoken'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class isLoggedIn implements CanActivate {\n  constructor(\n    @Inject()\n    private configService: ConfigService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const req = context.switchToHttp().getRequest()\n    const token = req.params?.token || req.cookies?.token\n\n    if (!token) {\n      throw new HttpException('Forbidden', 403)\n    }\n\n    try {\n      jwt.verify(token, this.configService.get('env.SECRET'))\n      return true\n    } catch {\n      throw new HttpException('Unauthorized', 401)\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Attribution-NonCommercial 4.0 International License\nCopyright (c) 2024 Miguel Zacca\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in the \nSoftware without restriction, including without limitation the rights to use, copy, \nmodify, merge, publish, distribute, sublicense, and/or sell copies of the Software, \nsubject to the following conditions:\n\nAttribution: You must give appropriate credit, provide a link to the license, \nand indicate if changes were made. You may do so in any reasonable manner, but \nnot in any way that suggests the licensor endorses you or your use.\n\nNonCommercial: You may not use the material for commercial purposes.\n\nNo additional restrictions: You may not apply legal terms or technological \nmeasures that legally restrict others from doing anything the license permits.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION \nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nDatabaseModule->ProductsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nFavoriteRepository \n\nFavoriteRepository \n\nFavoriteRepository  -->\n\nUserModule->FavoriteRepository \n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUserModule->UserRepository \n\n\n\n\n\nPopulateProductsService \n\nPopulateProductsService \n\nPopulateProductsService  -->\n\nAppModule->PopulateProductsService \n\n\n\n\n\nPopulateProductsService\n\nPopulateProductsService\n\nAppModule -->\n\nPopulateProductsService->AppModule\n\n\n\n\n\nRmUnverifiedUsers\n\nRmUnverifiedUsers\n\nAppModule -->\n\nRmUnverifiedUsers->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nCommonServices \n\nCommonServices \n\nCommonServices  -->\n\nCommonModule->CommonServices \n\n\n\n\n\nAuthServices\n\nAuthServices\n\nAuthModule -->\n\nAuthServices->AuthModule\n\n\n\n\n\nEmailVerifyUseCase\n\nEmailVerifyUseCase\n\nAuthModule -->\n\nEmailVerifyUseCase->AuthModule\n\n\n\n\n\nLoginUseCase\n\nLoginUseCase\n\nAuthModule -->\n\nLoginUseCase->AuthModule\n\n\n\n\n\nPasswdRecoveryUseCase\n\nPasswdRecoveryUseCase\n\nAuthModule -->\n\nPasswdRecoveryUseCase->AuthModule\n\n\n\n\n\nRegisterUseCase\n\nRegisterUseCase\n\nAuthModule -->\n\nRegisterUseCase->AuthModule\n\n\n\n\n\nCommonServices\n\nCommonServices\n\nCommonModule -->\n\nCommonServices->CommonModule\n\n\n\n\n\nGetProductsUseCase\n\nGetProductsUseCase\n\nProductsModule -->\n\nGetProductsUseCase->ProductsModule\n\n\n\n\n\nProductsRepository\n\nProductsRepository\n\nProductsModule -->\n\nProductsRepository->ProductsModule\n\n\n\n\n\nProductsServices\n\nProductsServices\n\nProductsModule -->\n\nProductsServices->ProductsModule\n\n\n\n\n\nChangePasswdUseCase\n\nChangePasswdUseCase\n\nUserModule -->\n\nChangePasswdUseCase->UserModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nUserModule -->\n\nDeleteUserUseCase->UserModule\n\n\n\n\n\nFavoriteRepository\n\nFavoriteRepository\n\nUserModule -->\n\nFavoriteRepository->UserModule\n\n\n\n\n\nGetFavoritesUseCase\n\nGetFavoritesUseCase\n\nUserModule -->\n\nGetFavoritesUseCase->UserModule\n\n\n\n\n\nGetUserUseCase\n\nGetUserUseCase\n\nUserModule -->\n\nGetUserUseCase->UserModule\n\n\n\n\n\nToggleFavoriteUseCase\n\nToggleFavoriteUseCase\n\nUserModule -->\n\nToggleFavoriteUseCase->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : The Develop Store API.\n        \n            License : CC-BY-NC-4.0\n        \n            Author : Miguel Zacca\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configuration   (src/.../configuration.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            favoriteProviders   (src/.../favorite.providers.ts)\n                        \n                        \n                            productsProviders   (src/.../products.providers.ts)\n                        \n                        \n                            userProviders   (src/.../user.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n  get env() {\n    return {\n      NODE_ENV: process.env.NODE_ENV,\n      PORT: Number(process.env.PORT),\n      ORIGIN_ADDR: process.env.ORIGIN_ADDR,\n      API_ADDR: process.env.API_ADDR,\n      SMTP_USER: process.env.SMTP_USER,\n      SMTP_PASS: process.env.SMTP_PASS,\n      AUTH_DURATION_DAYS: Number(process.env.AUTH_DURATION_DAYS),\n      SECRET: process.env.SECRET,\n    } as Env\n  },\n\n  get cors() {\n    return {\n      origin: [this.env.ORIGIN_ADDR, this.env.API_ADDR],\n      methods: ['GET', 'POST', 'PATCH', 'DELETE'],\n      credentials: true,\n    } as CorsOptions\n  },\n\n  get cookie() {\n    return {\n      httpOnly: true,\n      secure: true,\n      maxAge: this.env.AUTH_DURATION_DAYS * 24 * 60 * 60 * 1000,\n      sameSite: 'none',\n    } as CookieOptions\n  },\n\n  get serverMsg() {\n    return {\n      great: 'Welcome!',\n      err: 'A server occurred error. Please try later.',\n      denied: 'Access denied.',\n      invalidToken: 'Invalid token.',\n    }\n  },\n\n  get authMsg() {\n    return {\n      ok: 'Authentication successful.',\n      incorrect: 'Incorrect password.',\n      emailExists: 'This email already exists.',\n      noEmailToken: 'No email token provided.',\n      noVerifiedEmail: 'No email verified.',\n      recoveryEmail: 'Recovery email successfully send.',\n    }\n  },\n\n  get userMsg() {\n    return {\n      notFound: 'User not found.',\n      created: 'User created successfully.',\n      deleted: 'User deleted successfully.',\n      updated: 'User updated successfully.',\n    }\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'SEQUELIZE',\n    useFactory: async () => {\n      const sequelize = new Sequelize({\n        dialect: 'sqlite',\n        storage: './.data/database.db',\n        logging: false,\n      })\n      sequelize.addModels([User, Products, Favorites])\n      await sequelize.sync()\n      return sequelize\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/modules/user/providers/favorite.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        favoriteProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'FAVORITES',\n    useValue: Favorites,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/modules/products/products.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        productsProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'PRODUCTS',\n    useValue: Products,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/modules/user/providers/user.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USER',\n    useValue: User,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
